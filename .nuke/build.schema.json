{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Build Schema",
  "$ref": "#/definitions/build",
  "definitions": {
    "build": {
      "type": "object",
      "properties": {
        "Configuration": {
          "type": "string",
          "description": "Configuration to build - Default is 'Debug' (local) or 'Release' (server)"
        },
        "Continue": {
          "type": "boolean",
          "description": "Indicates to continue a previously failed build attempt"
        },
        "Help": {
          "type": "boolean",
          "description": "Shows the help text for this build assembly"
        },
        "Host": {
          "type": "string",
          "description": "Host for execution. Default is 'automatic'",
          "enum": [
            "AppVeyor",
            "AzurePipelines",
            "Bamboo",
            "Bitrise",
            "GitHubActions",
            "GitLab",
            "Jenkins",
            "Rider",
            "SpaceAutomation",
            "TeamCity",
            "Terminal",
            "TravisCI",
            "VisualStudio",
            "VSCode"
          ]
        },
        "MsbuildProperties": {
          "type": "array",
          "description": "Extra properties passed to MSBuild commands",
          "items": {
            "type": "string"
          }
        },
        "Native": {
          "type": "boolean",
          "description": "Build native code"
        },
        "NoLogo": {
          "type": "boolean",
          "description": "Disables displaying the NUKE logo"
        },
        "NugetApiKey": {
          "type": "string",
          "description": "The API key used to push packages and symbols packages to NuGet"
        },
        "NugetFeed": {
          "type": "string",
          "description": "NuGet feed"
        },
        "NugetNoServiceEndpoint": {
          "type": "boolean",
          "description": "NuGet -NoServiceEndpoint"
        },
        "NugetPassword": {
          "type": "string",
          "description": "NuGet password"
        },
        "NugetUsername": {
          "type": "string",
          "description": "NuGet username"
        },
        "OriginalSolution": {
          "type": "string",
          "description": "Path to a solution file that is automatically loaded"
        },
        "Partition": {
          "type": "string",
          "description": "Partition to use on CI"
        },
        "Plan": {
          "type": "boolean",
          "description": "Shows the execution plan (HTML)"
        },
        "Profile": {
          "type": "array",
          "description": "Defines the profiles to load",
          "items": {
            "type": "string"
          }
        },
        "Projects": {
          "type": "array",
          "description": "If specified, generates a solution including only the specified projects or group of projects. You can provide individual project names or the name of the folder in which they're contained e.g. \"--projects opengl examples/csharp vulkan microsoft core.win32extras silk.net.opencl\". The Silk.NET prefix for individual projects is optional, but folder names will be preferred over project names so if you only want \"Silk.NET.Vulkan\" and not everything in \"src/Vulkan\", use \"--projects silk.net.vulkan\". The solution include project dependencies. The solution will be regenerated whenever you run a NUKE build with this specified, but if you don't want to run a build just use \"nuke sln --projects ...\" to run a dummy target",
          "items": {
            "type": "string"
          }
        },
        "Root": {
          "type": "string",
          "description": "Root directory during build execution"
        },
        "SignPassword": {
          "type": "string",
          "description": "Code-signing service password"
        },
        "SignUsername": {
          "type": "string",
          "description": "Code-signing service username"
        },
        "Skip": {
          "type": "array",
          "description": "List of targets to be skipped. Empty list skips all dependencies",
          "items": {
            "type": "string",
            "enum": [
              "Angle",
              "BuildLibSilkDroid",
              "Clean",
              "Compile",
              "FullCompile",
              "FullPack",
              "FullPushToNuGet",
              "Pack",
              "Prerequisites",
              "PushToNuGet",
              "RegenerateBindings",
              "Restore",
              "SignPackages",
              "Sln",
              "SwiftShader",
              "Test",
              "ValidateSolution",
              "VulkanLoader"
            ]
          }
        },
        "Sln": {
          "type": "boolean",
          "description": "If specified, when using the clean target removes the generated solution and stops"
        },
        "Target": {
          "type": "array",
          "description": "List of targets to be invoked. Default is '{default_target}'",
          "items": {
            "type": "string",
            "enum": [
              "Angle",
              "BuildLibSilkDroid",
              "Clean",
              "Compile",
              "FullCompile",
              "FullPack",
              "FullPushToNuGet",
              "Pack",
              "Prerequisites",
              "PushToNuGet",
              "RegenerateBindings",
              "Restore",
              "SignPackages",
              "Sln",
              "SwiftShader",
              "Test",
              "ValidateSolution",
              "VulkanLoader"
            ]
          }
        },
        "Verbosity": {
          "type": "string",
          "description": "Logging verbosity during build execution. Default is 'Normal'",
          "enum": [
            "Minimal",
            "Normal",
            "Quiet",
            "Verbose"
          ]
        }
      }
    }
  }
}