// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Text;
using Silk.NET.Core;
using Silk.NET.Core.Native;
using Silk.NET.Core.Attributes;
using Silk.NET.Core.Contexts;
using Silk.NET.Core.Loader;

#pragma warning disable 1591

namespace Silk.NET.SDL
{
    public unsafe partial class Sdl : NativeAPI
    {
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_TIMER")]
        public const uint InitTimer = unchecked((uint) 0x1);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_AUDIO")]
        public const uint InitAudio = unchecked((uint) 0x10);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_VIDEO")]
        public const uint InitVideo = unchecked((uint) 0x20);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_JOYSTICK")]
        public const uint InitJoystick = unchecked((uint) 0x200);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_HAPTIC")]
        public const uint InitHaptic = unchecked((uint) 0x1000);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_GAMECONTROLLER")]
        public const uint InitGamecontroller = unchecked((uint) 0x2000);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_EVENTS")]
        public const uint InitEvents = unchecked((uint) 0x4000);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_SENSOR")]
        public const uint InitSensor = unchecked((uint) 0x8000);
        [NativeName("Type", "unsigned int")]
        [NativeName("Name", "SDL_INIT_NOPARACHUTE")]
        public const uint InitNoparachute = unchecked((uint) 0x100000);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 202, Column 38 in build/submodules/SDL/include/SDL_platform.h")]
        [NativeApi(EntryPoint = "SDL_GetPlatform")]
        public unsafe partial byte* GetPlatform();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 202, Column 38 in build/submodules/SDL/include/SDL_platform.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPlatform", Convention = CallingConvention.Winapi)]
        public partial string GetPlatformS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 395, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_malloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Malloc(nuint size);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_calloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Calloc(nuint nmemb, nuint size);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 397, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_realloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Realloc(void* mem, nuint size);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 397, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_realloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Realloc<T0>(ref T0 mem, nuint size) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 398, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_free", Convention = CallingConvention.Winapi)]
        public unsafe partial void Free(void* mem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 398, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_free", Convention = CallingConvention.Winapi)]
        public partial void Free<T0>(ref T0 mem) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, PfnCallocFunc* calloc_func, PfnReallocFunc* realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, PfnCallocFunc* calloc_func, PfnReallocFunc* realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, PfnCallocFunc* calloc_func, ref PfnReallocFunc realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, PfnCallocFunc* calloc_func, ref PfnReallocFunc realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, ref PfnCallocFunc calloc_func, PfnReallocFunc* realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, ref PfnCallocFunc calloc_func, PfnReallocFunc* realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, ref PfnCallocFunc calloc_func, ref PfnReallocFunc realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(PfnMallocFunc* malloc_func, ref PfnCallocFunc calloc_func, ref PfnReallocFunc realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, PfnCallocFunc* calloc_func, PfnReallocFunc* realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, PfnCallocFunc* calloc_func, PfnReallocFunc* realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, PfnCallocFunc* calloc_func, ref PfnReallocFunc realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, PfnCallocFunc* calloc_func, ref PfnReallocFunc realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, ref PfnCallocFunc calloc_func, PfnReallocFunc* realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, ref PfnCallocFunc calloc_func, PfnReallocFunc* realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, ref PfnCallocFunc calloc_func, ref PfnReallocFunc realloc_func, PfnFreeFunc* free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 408, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public partial void GetMemoryFunctions(ref PfnMallocFunc malloc_func, ref PfnCallocFunc calloc_func, ref PfnReallocFunc realloc_func, ref PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 421, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_SetMemoryFunctions", Convention = CallingConvention.Winapi)]
        public partial int SetMemoryFunctions(PfnMallocFunc malloc_func, PfnCallocFunc calloc_func, PfnReallocFunc realloc_func, PfnFreeFunc free_func);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 429, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_GetNumAllocations")]
        public partial int GetNumAllocations();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 431, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_getenv", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Getenv(byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 431, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_getenv", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetenvS(byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 431, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_getenv", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Getenv(ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 431, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_getenv", Convention = CallingConvention.Winapi)]
        public partial string GetenvS(ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 431, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_getenv", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Getenv([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 431, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_getenv", Convention = CallingConvention.Winapi)]
        public partial string GetenvS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public unsafe partial int Setenv(byte* name, byte* value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public unsafe partial int Setenv(byte* name, ref byte value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public unsafe partial int Setenv(byte* name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public unsafe partial int Setenv(ref byte name, byte* value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public partial int Setenv(ref byte name, ref byte value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public partial int Setenv(ref byte name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public unsafe partial int Setenv([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, byte* value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public partial int Setenv([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, ref byte value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 432, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_setenv", Convention = CallingConvention.Winapi)]
        public partial int Setenv([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value, int overwrite);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 434, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_qsort", Convention = CallingConvention.Winapi)]
        public unsafe partial void Qsort(void* @base, nuint nmemb, nuint size, PfnVvVvI compare);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 434, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_qsort", Convention = CallingConvention.Winapi)]
        public partial void Qsort<T0>(ref T0 @base, nuint nmemb, nuint size, PfnVvVvI compare) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_abs", Convention = CallingConvention.Winapi)]
        public partial int Abs(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 443, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isalpha", Convention = CallingConvention.Winapi)]
        public partial int Isalpha(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 444, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isalnum", Convention = CallingConvention.Winapi)]
        public partial int Isalnum(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 445, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isblank", Convention = CallingConvention.Winapi)]
        public partial int Isblank(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 446, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iscntrl", Convention = CallingConvention.Winapi)]
        public partial int Iscntrl(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 447, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isdigit", Convention = CallingConvention.Winapi)]
        public partial int Isdigit(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 448, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isxdigit", Convention = CallingConvention.Winapi)]
        public partial int Isxdigit(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ispunct", Convention = CallingConvention.Winapi)]
        public partial int Ispunct(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 450, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isspace", Convention = CallingConvention.Winapi)]
        public partial int Isspace(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 451, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isupper", Convention = CallingConvention.Winapi)]
        public partial int Isupper(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 452, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_islower", Convention = CallingConvention.Winapi)]
        public partial int Islower(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 453, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isprint", Convention = CallingConvention.Winapi)]
        public partial int Isprint(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 454, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_isgraph", Convention = CallingConvention.Winapi)]
        public partial int Isgraph(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 455, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_toupper", Convention = CallingConvention.Winapi)]
        public partial int Toupper(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 456, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_tolower", Convention = CallingConvention.Winapi)]
        public partial int Tolower(int x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 458, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_crc32", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Crc32(uint crc, void* data, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 458, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_crc32", Convention = CallingConvention.Winapi)]
        public partial uint Crc32<T0>(uint crc, ref T0 data, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 460, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memset", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memset(void* dst, int c, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 460, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memset", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memset<T0>(ref T0 dst, int c, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 497, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memcpy(void* dst, void* src, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 497, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memcpy<T0>(void* dst, ref T0 src, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 497, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memcpy<T0>(ref T0 dst, void* src, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 497, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memcpy<T0, T1>(ref T0 dst, ref T1 src, nuint len) where T0 : unmanaged where T1 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 499, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memmove", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memmove(void* dst, void* src, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 499, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memmove", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memmove<T0>(void* dst, ref T0 src, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 499, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memmove", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memmove<T0>(ref T0 dst, void* src, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 499, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memmove", Convention = CallingConvention.Winapi)]
        public unsafe partial void* Memmove<T0, T1>(ref T0 dst, ref T1 src, nuint len) where T0 : unmanaged where T1 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 500, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Memcmp(void* s1, void* s2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 500, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Memcmp<T0>(void* s1, ref T0 s2, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 500, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Memcmp<T0>(ref T0 s1, void* s2, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 500, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_memcmp", Convention = CallingConvention.Winapi)]
        public partial int Memcmp<T0, T1>(ref T0 s1, ref T1 s2, nuint len) where T0 : unmanaged where T1 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 502, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslen", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslen(char* wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 502, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslen", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslen(ref char wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 502, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslen", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslen([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcpy(char* dst, char* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcpy(char* dst, ref char src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcpy(char* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcpy(ref char dst, char* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcpy(ref char dst, ref char src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcpy(ref char dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, char* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref char src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcat(char* dst, char* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcat(char* dst, ref char src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcat(char* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcat(ref char dst, char* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcat(ref char dst, ref char src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcat(ref char dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Wcslcat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, char* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref char src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcslcat", Convention = CallingConvention.Winapi)]
        public partial nuint Wcslcat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 505, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsdup", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsdup(char* wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 505, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsdup", Convention = CallingConvention.Winapi)]
        public unsafe partial string WcsdupS(char* wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 505, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsdup", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsdup(ref char wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 505, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsdup", Convention = CallingConvention.Winapi)]
        public partial string WcsdupS(ref char wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 505, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsdup", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsdup([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 505, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsdup", Convention = CallingConvention.Winapi)]
        public partial string WcsdupS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string wstr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr(char* haystack, char* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string WcsstrS(char* haystack, char* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr(char* haystack, ref char needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string WcsstrS(char* haystack, ref char needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr(char* haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string WcsstrS(char* haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr(ref char haystack, char* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string WcsstrS(ref char haystack, char* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr(ref char haystack, ref char needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public partial string WcsstrS(ref char haystack, ref char needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr(ref char haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public partial string WcsstrS(ref char haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, char* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string WcsstrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, char* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, ref char needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public partial string WcsstrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, ref char needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public unsafe partial char* Wcsstr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 34 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_wcsstr", Convention = CallingConvention.Winapi)]
        public partial string WcsstrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscmp(char* str1, char* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscmp(char* str1, ref char str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscmp(char* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscmp(ref char str1, char* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscmp(ref char str1, ref char str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscmp(ref char str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, char* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref char str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 508, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncmp(char* str1, char* str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncmp(char* str1, ref char str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncmp(char* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncmp(ref char str1, char* str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncmp(ref char str1, ref char str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncmp(ref char str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, char* str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref char str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 509, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscasecmp(char* str1, char* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscasecmp(char* str1, ref char str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscasecmp(char* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscasecmp(ref char str1, char* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscasecmp(ref char str1, ref char str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscasecmp(ref char str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcscasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, char* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref char str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 510, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcscasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcscasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncasecmp(char* str1, char* str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncasecmp(char* str1, ref char str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncasecmp(char* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncasecmp(ref char str1, char* str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncasecmp(ref char str1, ref char str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncasecmp(ref char str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Wcsncasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, char* str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref char str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 511, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_wcsncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Wcsncasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 513, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlen", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlen(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 513, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlen", Convention = CallingConvention.Winapi)]
        public partial nuint Strlen(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 513, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlen", Convention = CallingConvention.Winapi)]
        public partial nuint Strlen([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcpy(byte* dst, byte* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcpy(byte* dst, ref byte src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcpy(byte* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcpy(ref byte dst, byte* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcpy(ref byte dst, ref byte src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcpy(ref byte dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, byte* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref byte src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 514, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Utf8strlcpy(byte* dst, byte* src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Utf8strlcpy(byte* dst, ref byte src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Utf8strlcpy(byte* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Utf8strlcpy(ref byte dst, byte* src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Utf8strlcpy(ref byte dst, ref byte src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Utf8strlcpy(ref byte dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Utf8strlcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, byte* src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Utf8strlcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref byte src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlcpy", Convention = CallingConvention.Winapi)]
        public partial nuint Utf8strlcpy([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint dst_bytes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcat(byte* dst, byte* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcat(byte* dst, ref byte src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcat(byte* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcat(ref byte dst, byte* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcat(ref byte dst, ref byte src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcat(ref byte dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Strlcat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, byte* src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref byte src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 516, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlcat", Convention = CallingConvention.Winapi)]
        public partial nuint Strlcat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 517, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strdup", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strdup(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 517, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strdup", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrdupS(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 517, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strdup", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strdup(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 517, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strdup", Convention = CallingConvention.Winapi)]
        public partial string StrdupS(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 517, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strdup", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strdup([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 517, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strdup", Convention = CallingConvention.Winapi)]
        public partial string StrdupS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 518, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strrev", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strrev(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 518, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strrev", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrrevS(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 518, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strrev", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strrev(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 518, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strrev", Convention = CallingConvention.Winapi)]
        public partial string StrrevS(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 518, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strrev", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strrev([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 518, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strrev", Convention = CallingConvention.Winapi)]
        public partial string StrrevS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 519, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strupr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strupr(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 519, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strupr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StruprS(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 519, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strupr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strupr(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 519, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strupr", Convention = CallingConvention.Winapi)]
        public partial string StruprS(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 519, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strupr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strupr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 519, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strupr", Convention = CallingConvention.Winapi)]
        public partial string StruprS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 520, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlwr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strlwr(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 520, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strlwr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrlwrS(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 520, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlwr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strlwr(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 520, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strlwr", Convention = CallingConvention.Winapi)]
        public partial string StrlwrS(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 520, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strlwr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strlwr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 520, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strlwr", Convention = CallingConvention.Winapi)]
        public partial string StrlwrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 521, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strchr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strchr(byte* str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 521, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strchr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrchrS(byte* str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 521, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strchr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strchr(ref byte str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 521, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strchr", Convention = CallingConvention.Winapi)]
        public partial string StrchrS(ref byte str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 521, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strchr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strchr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 521, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strchr", Convention = CallingConvention.Winapi)]
        public partial string StrchrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 522, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strrchr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strrchr(byte* str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 522, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strrchr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrrchrS(byte* str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 522, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strrchr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strrchr(ref byte str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 522, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strrchr", Convention = CallingConvention.Winapi)]
        public partial string StrrchrS(ref byte str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 522, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strrchr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strrchr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 522, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strrchr", Convention = CallingConvention.Winapi)]
        public partial string StrrchrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int c);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr(byte* haystack, byte* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrstrS(byte* haystack, byte* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr(byte* haystack, ref byte needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrstrS(byte* haystack, ref byte needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr(byte* haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrstrS(byte* haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr(ref byte haystack, byte* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrstrS(ref byte haystack, byte* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr(ref byte haystack, ref byte needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public partial string StrstrS(ref byte haystack, ref byte needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr(ref byte haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public partial string StrstrS(ref byte haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, byte* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrstrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, byte* needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, ref byte needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public partial string StrstrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, ref byte needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strstr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 523, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strstr", Convention = CallingConvention.Winapi)]
        public partial string StrstrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string haystack, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string needle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(byte* s1, byte* s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(byte* s1, byte* s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(byte* s1, byte* s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(byte* s1, byte* s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(byte* s1, ref byte s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(byte* s1, ref byte s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(byte* s1, ref byte s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(byte* s1, ref byte s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(byte* s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(byte* s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(byte* s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(byte* s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(ref byte s1, byte* s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(ref byte s1, byte* s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(ref byte s1, byte* s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(ref byte s1, byte* s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(ref byte s1, ref byte s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(ref byte s1, ref byte s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(ref byte s1, ref byte s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(ref byte s1, ref byte s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(ref byte s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(ref byte s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr(ref byte s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS(ref byte s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, byte* s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, byte* s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, byte* s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, byte* s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, ref byte s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, ref byte s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, ref byte s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, ref byte s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, byte** saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_strtokr", Convention = CallingConvention.Winapi)]
        public unsafe partial string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, ref byte* saveptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 525, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlen", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Utf8strlen(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 525, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlen", Convention = CallingConvention.Winapi)]
        public partial nuint Utf8strlen(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 525, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_utf8strlen", Convention = CallingConvention.Winapi)]
        public partial nuint Utf8strlen([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 527, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_itoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Itoa(int value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 527, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_itoa", Convention = CallingConvention.Winapi)]
        public unsafe partial string ItoaS(int value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 527, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_itoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Itoa(int value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 527, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_itoa", Convention = CallingConvention.Winapi)]
        public partial string ItoaS(int value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 527, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_itoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Itoa(int value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 527, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_itoa", Convention = CallingConvention.Winapi)]
        public partial string ItoaS(int value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_uitoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Uitoa(uint value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_uitoa", Convention = CallingConvention.Winapi)]
        public unsafe partial string UitoaS(uint value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_uitoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Uitoa(uint value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_uitoa", Convention = CallingConvention.Winapi)]
        public partial string UitoaS(uint value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_uitoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Uitoa(uint value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_uitoa", Convention = CallingConvention.Winapi)]
        public partial string UitoaS(uint value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ltoa(int value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial string LtoaS(int value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ltoa(int value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ltoa", Convention = CallingConvention.Winapi)]
        public partial string LtoaS(int value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ltoa(int value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ltoa", Convention = CallingConvention.Winapi)]
        public partial string LtoaS(int value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 530, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ultoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ultoa(uint value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 530, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ultoa", Convention = CallingConvention.Winapi)]
        public unsafe partial string UltoaS(uint value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 530, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ultoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ultoa(uint value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 530, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ultoa", Convention = CallingConvention.Winapi)]
        public partial string UltoaS(uint value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 530, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ultoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ultoa(uint value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 530, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ultoa", Convention = CallingConvention.Winapi)]
        public partial string UltoaS(uint value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 531, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_lltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Lltoa(long value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 531, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_lltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial string LltoaS(long value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 531, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_lltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Lltoa(long value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 531, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_lltoa", Convention = CallingConvention.Winapi)]
        public partial string LltoaS(long value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 531, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_lltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Lltoa(long value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 531, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_lltoa", Convention = CallingConvention.Winapi)]
        public partial string LltoaS(long value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ulltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ulltoa(ulong value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ulltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial string UlltoaS(ulong value, byte* str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ulltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ulltoa(ulong value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ulltoa", Convention = CallingConvention.Winapi)]
        public partial string UlltoaS(ulong value, ref byte str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ulltoa", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* Ulltoa(ulong value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_ulltoa", Convention = CallingConvention.Winapi)]
        public partial string UlltoaS(ulong value, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, int radix);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atoi", Convention = CallingConvention.Winapi)]
        public unsafe partial int Atoi(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atoi", Convention = CallingConvention.Winapi)]
        public partial int Atoi(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atoi", Convention = CallingConvention.Winapi)]
        public partial int Atoi([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 535, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atof", Convention = CallingConvention.Winapi)]
        public unsafe partial double Atof(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 535, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atof", Convention = CallingConvention.Winapi)]
        public partial double Atof(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 535, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atof", Convention = CallingConvention.Winapi)]
        public partial double Atof([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtol", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strtol(byte* str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtol", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strtol(byte* str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtol", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strtol(ref byte str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtol", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strtol(ref byte str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtol", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strtol([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtol", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strtol([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoul", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Strtoul(byte* str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoul", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Strtoul(byte* str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoul", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Strtoul(ref byte str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoul", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Strtoul(ref byte str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoul", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Strtoul([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoul", Convention = CallingConvention.Winapi)]
        public unsafe partial uint Strtoul([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoll", Convention = CallingConvention.Winapi)]
        public unsafe partial long Strtoll(byte* str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoll", Convention = CallingConvention.Winapi)]
        public unsafe partial long Strtoll(byte* str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoll", Convention = CallingConvention.Winapi)]
        public unsafe partial long Strtoll(ref byte str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoll", Convention = CallingConvention.Winapi)]
        public unsafe partial long Strtoll(ref byte str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoll", Convention = CallingConvention.Winapi)]
        public unsafe partial long Strtoll([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoll", Convention = CallingConvention.Winapi)]
        public unsafe partial long Strtoll([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoull", Convention = CallingConvention.Winapi)]
        public unsafe partial ulong Strtoull(byte* str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoull", Convention = CallingConvention.Winapi)]
        public unsafe partial ulong Strtoull(byte* str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoull", Convention = CallingConvention.Winapi)]
        public unsafe partial ulong Strtoull(ref byte str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoull", Convention = CallingConvention.Winapi)]
        public unsafe partial ulong Strtoull(ref byte str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoull", Convention = CallingConvention.Winapi)]
        public unsafe partial ulong Strtoull([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, byte** endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtoull", Convention = CallingConvention.Winapi)]
        public unsafe partial ulong Strtoull([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, ref byte* endp, int @base);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtod", Convention = CallingConvention.Winapi)]
        public unsafe partial double Strtod(byte* str, byte** endp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtod", Convention = CallingConvention.Winapi)]
        public unsafe partial double Strtod(byte* str, ref byte* endp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtod", Convention = CallingConvention.Winapi)]
        public unsafe partial double Strtod(ref byte str, byte** endp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtod", Convention = CallingConvention.Winapi)]
        public unsafe partial double Strtod(ref byte str, ref byte* endp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtod", Convention = CallingConvention.Winapi)]
        public unsafe partial double Strtod([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, byte** endp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strtod", Convention = CallingConvention.Winapi)]
        public unsafe partial double Strtod([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, ref byte* endp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcmp(byte* str1, byte* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcmp(byte* str1, ref byte str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcmp(byte* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcmp(ref byte str1, byte* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public partial int Strcmp(ref byte str1, ref byte str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public partial int Strcmp(ref byte str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, byte* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public partial int Strcmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref byte str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcmp", Convention = CallingConvention.Winapi)]
        public partial int Strcmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncmp(byte* str1, byte* str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncmp(byte* str1, ref byte str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncmp(byte* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncmp(ref byte str1, byte* str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public partial int Strncmp(ref byte str1, ref byte str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public partial int Strncmp(ref byte str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, byte* str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public partial int Strncmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref byte str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncmp", Convention = CallingConvention.Winapi)]
        public partial int Strncmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcasecmp(byte* str1, byte* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcasecmp(byte* str1, ref byte str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcasecmp(byte* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcasecmp(ref byte str1, byte* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strcasecmp(ref byte str1, ref byte str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strcasecmp(ref byte str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strcasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, byte* str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strcasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref byte str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 544, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strcasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strcasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncasecmp(byte* str1, byte* str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncasecmp(byte* str1, ref byte str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncasecmp(byte* str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncasecmp(ref byte str1, byte* str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strncasecmp(ref byte str1, ref byte str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strncasecmp(ref byte str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public unsafe partial int Strncasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, byte* str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strncasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, ref byte str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 545, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_strncasecmp", Convention = CallingConvention.Winapi)]
        public partial int Strncasecmp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str2, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Sscanf(byte* text, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Sscanf(byte* text, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Sscanf(byte* text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Sscanf(ref byte text, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public partial int Sscanf(ref byte text, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public partial int Sscanf(ref byte text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Sscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public partial int Sscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 547, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sscanf", Convention = CallingConvention.Winapi)]
        public partial int Sscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(byte* text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(ref byte text, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(ref byte text, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(ref byte text, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(ref byte text, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf(ref byte text, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf(ref byte text, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf(ref byte text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf(ref byte text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf(ref byte text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsscanf", Convention = CallingConvention.Winapi)]
        public partial int Vsscanf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Snprintf(byte* text, nuint maxlen, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Snprintf(byte* text, nuint maxlen, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Snprintf(byte* text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Snprintf(ref byte text, nuint maxlen, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public partial int Snprintf(ref byte text, nuint maxlen, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public partial int Snprintf(ref byte text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Snprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public partial int Snprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_snprintf", Convention = CallingConvention.Winapi)]
        public partial int Snprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(byte* text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(ref byte text, nuint maxlen, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(ref byte text, nuint maxlen, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(ref byte text, nuint maxlen, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(ref byte text, nuint maxlen, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf(ref byte text, nuint maxlen, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf(ref byte text, nuint maxlen, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf(ref byte text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf(ref byte text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf(ref byte text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public unsafe partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 550, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_vsnprintf", Convention = CallingConvention.Winapi)]
        public partial int Vsnprintf([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text, nuint maxlen, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 558, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_acos", Convention = CallingConvention.Winapi)]
        public partial double Acos(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 559, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_acosf", Convention = CallingConvention.Winapi)]
        public partial float Acosf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 560, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_asin", Convention = CallingConvention.Winapi)]
        public partial double Asin(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 561, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_asinf", Convention = CallingConvention.Winapi)]
        public partial float Asinf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atan", Convention = CallingConvention.Winapi)]
        public partial double Atan(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 563, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atanf", Convention = CallingConvention.Winapi)]
        public partial float Atanf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 564, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atan2", Convention = CallingConvention.Winapi)]
        public partial double Atan2(double x, double y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_atan2f", Convention = CallingConvention.Winapi)]
        public partial float Atan2f(float x, float y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 566, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ceil", Convention = CallingConvention.Winapi)]
        public partial double Ceil(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 567, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_ceilf", Convention = CallingConvention.Winapi)]
        public partial float Ceilf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 568, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_copysign", Convention = CallingConvention.Winapi)]
        public partial double Copysign(double x, double y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 569, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_copysignf", Convention = CallingConvention.Winapi)]
        public partial float Copysignf(float x, float y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 570, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_cos", Convention = CallingConvention.Winapi)]
        public partial double Cos(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 571, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_cosf", Convention = CallingConvention.Winapi)]
        public partial float Cosf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 572, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_exp", Convention = CallingConvention.Winapi)]
        public partial double Exp(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 573, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_expf", Convention = CallingConvention.Winapi)]
        public partial float Expf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 574, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_fabs", Convention = CallingConvention.Winapi)]
        public partial double Fabs(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 575, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_fabsf", Convention = CallingConvention.Winapi)]
        public partial float Fabsf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 576, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_floor", Convention = CallingConvention.Winapi)]
        public partial double Floor(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 577, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_floorf", Convention = CallingConvention.Winapi)]
        public partial float Floorf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 578, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_trunc", Convention = CallingConvention.Winapi)]
        public partial double Trunc(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 579, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_truncf", Convention = CallingConvention.Winapi)]
        public partial float Truncf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 580, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_fmod", Convention = CallingConvention.Winapi)]
        public partial double Fmod(double x, double y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 581, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_fmodf", Convention = CallingConvention.Winapi)]
        public partial float Fmodf(float x, float y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 582, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_log", Convention = CallingConvention.Winapi)]
        public partial double Log(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 583, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_logf", Convention = CallingConvention.Winapi)]
        public partial float Logf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 584, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_log10", Convention = CallingConvention.Winapi)]
        public partial double Log10(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 585, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_log10f", Convention = CallingConvention.Winapi)]
        public partial float Log10f(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 586, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_pow", Convention = CallingConvention.Winapi)]
        public partial double Pow(double x, double y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 587, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_powf", Convention = CallingConvention.Winapi)]
        public partial float Powf(float x, float y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_round", Convention = CallingConvention.Winapi)]
        public partial double Round(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_roundf", Convention = CallingConvention.Winapi)]
        public partial float Roundf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 590, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_lround", Convention = CallingConvention.Winapi)]
        public partial int Lround(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 591, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_lroundf", Convention = CallingConvention.Winapi)]
        public partial int Lroundf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 592, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_scalbn", Convention = CallingConvention.Winapi)]
        public partial double Scalbn(double x, int n);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 593, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_scalbnf", Convention = CallingConvention.Winapi)]
        public partial float Scalbnf(float x, int n);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 594, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sin", Convention = CallingConvention.Winapi)]
        public partial double Sin(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sinf", Convention = CallingConvention.Winapi)]
        public partial float Sinf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 596, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sqrt", Convention = CallingConvention.Winapi)]
        public partial double Sqrt(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 597, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_sqrtf", Convention = CallingConvention.Winapi)]
        public partial float Sqrtf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 598, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_tan", Convention = CallingConvention.Winapi)]
        public partial double Tan(double x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_tanf", Convention = CallingConvention.Winapi)]
        public partial float Tanf(float x);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen(byte* tocode, byte* fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen(byte* tocode, ref byte fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen(ref byte tocode, byte* fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen(ref byte tocode, ref byte fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 609, Column 37 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_open", Convention = CallingConvention.Winapi)]
        public unsafe partial Icon* IconvOpen([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 611, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_close", Convention = CallingConvention.Winapi)]
        public unsafe partial int IconvClose(Icon* cd);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 611, Column 29 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_close", Convention = CallingConvention.Winapi)]
        public partial int IconvClose(ref Icon cd);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, nuint* inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, nuint* inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, nuint* inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, nuint* inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, ref nuint inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, ref nuint inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, ref nuint inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, byte** inbuf, ref nuint inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, nuint* inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, nuint* inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, nuint* inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, nuint* inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, ref nuint inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, ref nuint inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, ref nuint inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(Icon* cd, ref byte* inbuf, ref nuint inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, nuint* inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, nuint* inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, nuint* inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, nuint* inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, ref nuint inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, ref nuint inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, ref nuint inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, byte** inbuf, ref nuint inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, nuint* inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, nuint* inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, nuint* inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, nuint* inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, ref nuint inbytesleft, byte** outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, ref nuint inbytesleft, byte** outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, ref nuint inbytesleft, ref byte* outbuf, nuint* outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv", Convention = CallingConvention.Winapi)]
        public unsafe partial nuint Iconv(ref Icon cd, ref byte* inbuf, ref nuint inbytesleft, ref byte* outbuf, ref nuint outbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, byte* fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, byte* fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, byte* fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, byte* fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, byte* fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, byte* fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, ref byte fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, ref byte fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, ref byte fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, ref byte fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, ref byte fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, ref byte fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(byte* tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, byte* fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(ref byte tocode, byte* fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, byte* fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(ref byte tocode, byte* fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, byte* fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(ref byte tocode, byte* fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, ref byte fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(ref byte tocode, ref byte fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, ref byte fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS(ref byte tocode, ref byte fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, ref byte fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS(ref byte tocode, ref byte fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS(ref byte tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, byte* fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, ref byte fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, byte* inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, ref byte inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* IconvString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 619, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_iconv_string", Convention = CallingConvention.Winapi)]
        public partial string IconvStringS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string tocode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fromcode, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string inbuf, nuint inbytesleft);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 356, Column 37 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetPixelFormatName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPixelFormatName(uint format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 356, Column 37 in build/submodules/SDL/include/SDL_pixels.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPixelFormatName", Convention = CallingConvention.Winapi)]
        public partial string GetPixelFormatNameS(uint format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, uint* Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, uint* Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, uint* Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, uint* Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, ref uint Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, ref uint Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, ref uint Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, uint* Rmask, ref uint Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, uint* Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, uint* Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, uint* Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, uint* Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, ref uint Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, ref uint Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, ref uint Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, int* bpp, ref uint Rmask, ref uint Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, uint* Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, uint* Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, uint* Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, uint* Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, ref uint Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, ref uint Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, ref uint Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, uint* Rmask, ref uint Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, uint* Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, uint* Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, uint* Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, uint* Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, ref uint Gmask, uint* Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, ref uint Gmask, uint* Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, ref uint Gmask, ref uint Bmask, uint* Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 372, Column 34 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_PixelFormatEnumToMasks", Convention = CallingConvention.Winapi)]
        public partial SdlBool PixelFormatEnumToMasks(uint format, ref int bpp, ref uint Rmask, ref uint Gmask, ref uint Bmask, ref uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 394, Column 32 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_MasksToPixelFormatEnum", Convention = CallingConvention.Winapi)]
        public partial uint MasksToPixelFormatEnum(int bpp, uint Rmask, uint Gmask, uint Bmask, uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 413, Column 43 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_AllocFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial PixelFormat* AllocFormat(uint pixel_format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_FreeFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial void FreeFormat(PixelFormat* format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_FreeFormat", Convention = CallingConvention.Winapi)]
        public partial void FreeFormat(ref PixelFormat format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 38 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_AllocPalette", Convention = CallingConvention.Winapi)]
        public unsafe partial Palette* AllocPalette(int ncolors);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPixelFormatPalette", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetPixelFormatPalette(PixelFormat* format, Palette* palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPixelFormatPalette", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetPixelFormatPalette(PixelFormat* format, ref Palette palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPixelFormatPalette", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetPixelFormatPalette(ref PixelFormat format, Palette* palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPixelFormatPalette", Convention = CallingConvention.Winapi)]
        public partial int SetPixelFormatPalette(ref PixelFormat format, ref Palette palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 465, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPaletteColors", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetPaletteColors(Palette* palette, Color* colors, int firstcolor, int ncolors);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 465, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPaletteColors", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetPaletteColors(Palette* palette, ref Color colors, int firstcolor, int ncolors);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 465, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPaletteColors", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetPaletteColors(ref Palette palette, Color* colors, int firstcolor, int ncolors);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 465, Column 29 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_SetPaletteColors", Convention = CallingConvention.Winapi)]
        public partial int SetPaletteColors(ref Palette palette, ref Color colors, int firstcolor, int ncolors);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 476, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_FreePalette", Convention = CallingConvention.Winapi)]
        public unsafe partial void FreePalette(Palette* palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 476, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_FreePalette", Convention = CallingConvention.Winapi)]
        public partial void FreePalette(ref Palette palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 32 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_MapRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial uint MapRGB(PixelFormat* format, byte r, byte g, byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 506, Column 32 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_MapRGB", Convention = CallingConvention.Winapi)]
        public partial uint MapRGB(ref PixelFormat format, byte r, byte g, byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_MapRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial uint MapRGBA(PixelFormat* format, byte r, byte g, byte b, byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_MapRGBA", Convention = CallingConvention.Winapi)]
        public partial uint MapRGBA(ref PixelFormat format, byte r, byte g, byte b, byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 562, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGB", Convention = CallingConvention.Winapi)]
        public partial void GetRGB(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, PixelFormat* format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_GetRGBA", Convention = CallingConvention.Winapi)]
        public partial void GetRGBA(uint pixel, ref PixelFormat format, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 602, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_CalculateGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial void CalculateGammaRamp(float gamma, ushort* ramp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 602, Column 30 in build/submodules/SDL/include/SDL_pixels.h")]
        [NativeApi(EntryPoint = "SDL_CalculateGammaRamp", Convention = CallingConvention.Winapi)]
        public partial void CalculateGammaRamp(float gamma, ref ushort ramp);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 64, Column 29 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_SetError", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetError(byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 64, Column 29 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_SetError", Convention = CallingConvention.Winapi)]
        public partial int SetError(ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 64, Column 29 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_SetError", Convention = CallingConvention.Winapi)]
        public partial int SetError([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 98, Column 37 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_GetError")]
        public unsafe partial byte* GetError();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 98, Column 37 in build/submodules/SDL/include/SDL_error.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetError", Convention = CallingConvention.Winapi)]
        public partial string GetErrorS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 113, Column 32 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_GetErrorMsg", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetErrorMsg(byte* errstr, int maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 113, Column 32 in build/submodules/SDL/include/SDL_error.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetErrorMsg", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetErrorMsgS(byte* errstr, int maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 113, Column 32 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_GetErrorMsg", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetErrorMsg(ref byte errstr, int maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 113, Column 32 in build/submodules/SDL/include/SDL_error.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetErrorMsg", Convention = CallingConvention.Winapi)]
        public partial string GetErrorMsgS(ref byte errstr, int maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 113, Column 32 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_GetErrorMsg", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetErrorMsg([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string errstr, int maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 113, Column 32 in build/submodules/SDL/include/SDL_error.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetErrorMsg", Convention = CallingConvention.Winapi)]
        public partial string GetErrorMsgS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string errstr, int maxlen);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 30 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_ClearError")]
        public partial void ClearError();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 143, Column 29 in build/submodules/SDL/include/SDL_error.h")]
        [NativeApi(EntryPoint = "SDL_Error", Convention = CallingConvention.Winapi)]
        public partial int Error(Errorcode code);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_HasIntersection", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool HasIntersection(Silk.NET.Maths.Rectangle<int>* A, Silk.NET.Maths.Rectangle<int>* B);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_HasIntersection", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool HasIntersection(Silk.NET.Maths.Rectangle<int>* A, ref Silk.NET.Maths.Rectangle<int> B);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_HasIntersection", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool HasIntersection(ref Silk.NET.Maths.Rectangle<int> A, Silk.NET.Maths.Rectangle<int>* B);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_HasIntersection", Convention = CallingConvention.Winapi)]
        public partial SdlBool HasIntersection(ref Silk.NET.Maths.Rectangle<int> A, ref Silk.NET.Maths.Rectangle<int> B);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(Silk.NET.Maths.Rectangle<int>* A, Silk.NET.Maths.Rectangle<int>* B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(Silk.NET.Maths.Rectangle<int>* A, Silk.NET.Maths.Rectangle<int>* B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(Silk.NET.Maths.Rectangle<int>* A, ref Silk.NET.Maths.Rectangle<int> B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(Silk.NET.Maths.Rectangle<int>* A, ref Silk.NET.Maths.Rectangle<int> B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(ref Silk.NET.Maths.Rectangle<int> A, Silk.NET.Maths.Rectangle<int>* B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(ref Silk.NET.Maths.Rectangle<int> A, Silk.NET.Maths.Rectangle<int>* B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRect(ref Silk.NET.Maths.Rectangle<int> A, ref Silk.NET.Maths.Rectangle<int> B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRect", Convention = CallingConvention.Winapi)]
        public partial SdlBool IntersectRect(ref Silk.NET.Maths.Rectangle<int> A, ref Silk.NET.Maths.Rectangle<int> B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(Silk.NET.Maths.Rectangle<int>* A, Silk.NET.Maths.Rectangle<int>* B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(Silk.NET.Maths.Rectangle<int>* A, Silk.NET.Maths.Rectangle<int>* B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(Silk.NET.Maths.Rectangle<int>* A, ref Silk.NET.Maths.Rectangle<int> B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(Silk.NET.Maths.Rectangle<int>* A, ref Silk.NET.Maths.Rectangle<int> B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(ref Silk.NET.Maths.Rectangle<int> A, Silk.NET.Maths.Rectangle<int>* B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(ref Silk.NET.Maths.Rectangle<int> A, Silk.NET.Maths.Rectangle<int>* B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnionRect(ref Silk.NET.Maths.Rectangle<int> A, ref Silk.NET.Maths.Rectangle<int> B, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 165, Column 30 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_UnionRect", Convention = CallingConvention.Winapi)]
        public partial void UnionRect(ref Silk.NET.Maths.Rectangle<int> A, ref Silk.NET.Maths.Rectangle<int> B, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(Point* points, int count, Silk.NET.Maths.Rectangle<int>* clip, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(Point* points, int count, Silk.NET.Maths.Rectangle<int>* clip, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(Point* points, int count, ref Silk.NET.Maths.Rectangle<int> clip, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(Point* points, int count, ref Silk.NET.Maths.Rectangle<int> clip, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(ref Point points, int count, Silk.NET.Maths.Rectangle<int>* clip, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(ref Point points, int count, Silk.NET.Maths.Rectangle<int>* clip, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool EnclosePoints(ref Point points, int count, ref Silk.NET.Maths.Rectangle<int> clip, Silk.NET.Maths.Rectangle<int>* result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 184, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_EnclosePoints", Convention = CallingConvention.Winapi)]
        public partial SdlBool EnclosePoints(ref Point points, int count, ref Silk.NET.Maths.Rectangle<int> clip, ref Silk.NET.Maths.Rectangle<int> result);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, int* Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, int* Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, int* Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, int* Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, ref int Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, ref int Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, ref int Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, int* X1, ref int Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, int* Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, int* Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, int* Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, int* Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, ref int Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, ref int Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, ref int Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(Silk.NET.Maths.Rectangle<int>* rect, ref int X1, ref int Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, int* Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, int* Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, int* Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, int* Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, ref int Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, ref int Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, ref int Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, int* X1, ref int Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, int* Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, int* Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, int* Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, int* Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, ref int Y1, int* X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, ref int Y1, int* X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, ref int Y1, ref int X2, int* Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 205, Column 34 in build/submodules/SDL/include/SDL_rect.h")]
        [NativeApi(EntryPoint = "SDL_IntersectRectAndLine", Convention = CallingConvention.Winapi)]
        public partial SdlBool IntersectRectAndLine(ref Silk.NET.Maths.Rectangle<int> rect, ref int X1, ref int Y1, ref int X2, ref int Y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 185, Column 39 in build/submodules/SDL/include/SDL_blendmode.h")]
        [NativeApi(EntryPoint = "SDL_ComposeCustomBlendMode", Convention = CallingConvention.Winapi)]
        public partial BlendMode ComposeCustomBlendMode(BlendFactor srcColorFactor, BlendFactor dstColorFactor, BlendOperation colorOperation, BlendFactor srcAlphaFactor, BlendFactor dstAlphaFactor, BlendOperation alphaOperation);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 156, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_CreateRGBSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* CreateRGBSurface(uint flags, int width, int height, int depth, uint Rmask, uint Gmask, uint Bmask, uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 181, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_CreateRGBSurfaceWithFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* CreateRGBSurfaceWithFormat(uint flags, int width, int height, int depth, uint format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 210, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_CreateRGBSurfaceFrom", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* CreateRGBSurfaceFrom(void* pixels, int width, int height, int depth, int pitch, uint Rmask, uint Gmask, uint Bmask, uint Amask);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 210, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_CreateRGBSurfaceFrom", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* CreateRGBSurfaceFrom<T0>(ref T0 pixels, int width, int height, int depth, int pitch, uint Rmask, uint Gmask, uint Bmask, uint Amask) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 245, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_CreateRGBSurfaceWithFormatFrom", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* CreateRGBSurfaceWithFormatFrom(void* pixels, int width, int height, int depth, int pitch, uint format);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 245, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_CreateRGBSurfaceWithFormatFrom", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* CreateRGBSurfaceWithFormatFrom<T0>(ref T0 pixels, int width, int height, int depth, int pitch, uint format) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 260, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FreeSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial void FreeSurface(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 260, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FreeSurface", Convention = CallingConvention.Winapi)]
        public partial void FreeSurface(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 272, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfacePalette", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfacePalette(Surface* surface, Palette* palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 272, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfacePalette", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfacePalette(Surface* surface, ref Palette palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 272, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfacePalette", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfacePalette(ref Surface surface, Palette* palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 272, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfacePalette", Convention = CallingConvention.Winapi)]
        public partial int SetSurfacePalette(ref Surface surface, ref Palette palette);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 294, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LockSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockSurface(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 294, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LockSurface", Convention = CallingConvention.Winapi)]
        public partial int LockSurface(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 303, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UnlockSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnlockSurface(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 303, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UnlockSurface", Convention = CallingConvention.Winapi)]
        public partial void UnlockSurface(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 319, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LoadBMP_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* LoadBMPRW(RWops* src, int freesrc);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 319, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LoadBMP_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* LoadBMPRW(ref RWops src, int freesrc);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 347, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SaveBMP_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial int SaveBMPRW(Surface* surface, RWops* dst, int freedst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 347, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SaveBMP_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial int SaveBMPRW(Surface* surface, ref RWops dst, int freedst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 347, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SaveBMP_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial int SaveBMPRW(ref Surface surface, RWops* dst, int freedst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 347, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SaveBMP_RW", Convention = CallingConvention.Winapi)]
        public partial int SaveBMPRW(ref Surface surface, ref RWops dst, int freedst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 373, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceRLE", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfaceRLE(Surface* surface, int flag);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 373, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceRLE", Convention = CallingConvention.Winapi)]
        public partial int SetSurfaceRLE(ref Surface surface, int flag);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 386, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_HasSurfaceRLE", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool HasSurfaceRLE(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 386, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_HasSurfaceRLE", Convention = CallingConvention.Winapi)]
        public partial SdlBool HasSurfaceRLE(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 407, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetColorKey", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetColorKey(Surface* surface, int flag, uint key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 407, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetColorKey", Convention = CallingConvention.Winapi)]
        public partial int SetColorKey(ref Surface surface, int flag, uint key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 421, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_HasColorKey", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool HasColorKey(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 421, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_HasColorKey", Convention = CallingConvention.Winapi)]
        public partial SdlBool HasColorKey(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 439, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetColorKey", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetColorKey(Surface* surface, uint* key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 439, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetColorKey", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetColorKey(Surface* surface, ref uint key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 439, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetColorKey", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetColorKey(ref Surface surface, uint* key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 439, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetColorKey", Convention = CallingConvention.Winapi)]
        public partial int GetColorKey(ref Surface surface, ref uint key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 461, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfaceColorMod(Surface* surface, byte r, byte g, byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 461, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int SetSurfaceColorMod(ref Surface surface, byte r, byte g, byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, ref byte r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, ref byte r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, ref byte r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, ref byte r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceColorMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 498, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfaceAlphaMod(Surface* surface, byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 498, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public partial int SetSurfaceAlphaMod(ref Surface surface, byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceAlphaMod(Surface* surface, byte* alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceAlphaMod(Surface* surface, ref byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceAlphaMod(Surface* surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceAlphaMod(ref Surface surface, byte* alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceAlphaMod(ref Surface surface, ref byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceAlphaMod", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceAlphaMod(ref Surface surface, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetSurfaceBlendMode(Surface* surface, BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 529, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetSurfaceBlendMode", Convention = CallingConvention.Winapi)]
        public partial int SetSurfaceBlendMode(ref Surface surface, BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceBlendMode(Surface* surface, BlendMode* blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceBlendMode(Surface* surface, ref BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetSurfaceBlendMode(ref Surface surface, BlendMode* blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetSurfaceBlendMode", Convention = CallingConvention.Winapi)]
        public partial int GetSurfaceBlendMode(ref Surface surface, ref BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 563, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetClipRect(Surface* surface, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 563, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetClipRect(Surface* surface, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 563, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetClipRect(ref Surface surface, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 563, Column 34 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetClipRect", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetClipRect(ref Surface surface, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 580, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetClipRect(Surface* surface, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 580, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetClipRect(Surface* surface, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 580, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetClipRect(ref Surface surface, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 580, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetClipRect", Convention = CallingConvention.Winapi)]
        public partial void GetClipRect(ref Surface surface, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 592, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_DuplicateSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* DuplicateSurface(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 592, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_DuplicateSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* DuplicateSurface(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 614, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* ConvertSurface(Surface* src, PixelFormat* fmt, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 614, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* ConvertSurface(Surface* src, ref PixelFormat fmt, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 614, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* ConvertSurface(ref Surface src, PixelFormat* fmt, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 614, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* ConvertSurface(ref Surface src, ref PixelFormat fmt, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 637, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertSurfaceFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* ConvertSurfaceFormat(Surface* src, uint pixel_format, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 637, Column 38 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertSurfaceFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* ConvertSurfaceFormat(ref Surface src, uint pixel_format, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 654, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int ConvertPixels(int width, int height, uint src_format, void* src, int src_pitch, uint dst_format, void* dst, int dst_pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 654, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int ConvertPixels<T0>(int width, int height, uint src_format, void* src, int src_pitch, uint dst_format, ref T0 dst, int dst_pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 654, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int ConvertPixels<T0>(int width, int height, uint src_format, ref T0 src, int src_pitch, uint dst_format, void* dst, int dst_pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 654, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_ConvertPixels", Convention = CallingConvention.Winapi)]
        public partial int ConvertPixels<T0, T1>(int width, int height, uint src_format, ref T0 src, int src_pitch, uint dst_format, ref T1 dst, int dst_pitch) where T0 : unmanaged where T1 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 681, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int FillRect(Surface* dst, Silk.NET.Maths.Rectangle<int>* rect, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 681, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int FillRect(Surface* dst, ref Silk.NET.Maths.Rectangle<int> rect, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 681, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int FillRect(ref Surface dst, Silk.NET.Maths.Rectangle<int>* rect, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 681, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRect", Convention = CallingConvention.Winapi)]
        public partial int FillRect(ref Surface dst, ref Silk.NET.Maths.Rectangle<int> rect, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int FillRects(Surface* dst, Silk.NET.Maths.Rectangle<int>* rects, int count, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int FillRects(Surface* dst, ref Silk.NET.Maths.Rectangle<int> rects, int count, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int FillRects(ref Surface dst, Silk.NET.Maths.Rectangle<int>* rects, int count, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_FillRects", Convention = CallingConvention.Winapi)]
        public partial int FillRects(ref Surface dst, ref Silk.NET.Maths.Rectangle<int> rects, int count, uint color);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 776, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlit", Convention = CallingConvention.Winapi)]
        public partial int UpperBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 800, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlit", Convention = CallingConvention.Winapi)]
        public partial int LowerBlit(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretch(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 813, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretch", Convention = CallingConvention.Winapi)]
        public partial int SoftStretch(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public unsafe partial int SoftStretchLinear(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SoftStretchLinear", Convention = CallingConvention.Winapi)]
        public partial int SoftStretchLinear(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpperBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 837, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_UpperBlitScaled", Convention = CallingConvention.Winapi)]
        public partial int UpperBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(Surface* src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, Silk.NET.Maths.Rectangle<int>* srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, Surface* dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public unsafe partial int LowerBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_LowerBlitScaled", Convention = CallingConvention.Winapi)]
        public partial int LowerBlitScaled(ref Surface src, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Surface dst, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 865, Column 30 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_SetYUVConversionMode", Convention = CallingConvention.Winapi)]
        public partial void SetYUVConversionMode(YUVCONVERSIONMODE mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 870, Column 49 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetYUVConversionMode")]
        public partial YUVCONVERSIONMODE GetYUVConversionMode();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 49 in build/submodules/SDL/include/SDL_surface.h")]
        [NativeApi(EntryPoint = "SDL_GetYUVConversionModeForResolution", Convention = CallingConvention.Winapi)]
        public partial YUVCONVERSIONMODE GetYUVConversionModeForResolution(int width, int height);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetNumVideoDrivers")]
        public partial int GetNumVideoDrivers();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 288, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetVideoDriver", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetVideoDriver(int index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 288, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetVideoDriver", Convention = CallingConvention.Winapi)]
        public partial string GetVideoDriverS(int index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 317, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_VideoInit", Convention = CallingConvention.Winapi)]
        public unsafe partial int VideoInit(byte* driver_name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 317, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_VideoInit", Convention = CallingConvention.Winapi)]
        public partial int VideoInit(ref byte driver_name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 317, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_VideoInit", Convention = CallingConvention.Winapi)]
        public partial int VideoInit([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string driver_name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 326, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_VideoQuit")]
        public partial void VideoQuit();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 339, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetCurrentVideoDriver")]
        public unsafe partial byte* GetCurrentVideoDriver();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 339, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetCurrentVideoDriver", Convention = CallingConvention.Winapi)]
        public partial string GetCurrentVideoDriverS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 351, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetNumVideoDisplays")]
        public partial int GetNumVideoDisplays();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 365, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetDisplayName(int displayIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 365, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetDisplayName", Convention = CallingConvention.Winapi)]
        public partial string GetDisplayNameS(int displayIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 379, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayBounds", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayBounds(int displayIndex, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 379, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayBounds", Convention = CallingConvention.Winapi)]
        public partial int GetDisplayBounds(int displayIndex, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 410, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayUsableBounds", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayUsableBounds(int displayIndex, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 410, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayUsableBounds", Convention = CallingConvention.Winapi)]
        public partial int GetDisplayUsableBounds(int displayIndex, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, float* ddpi, float* hdpi, float* vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, float* ddpi, float* hdpi, ref float vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, float* ddpi, ref float hdpi, float* vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, float* ddpi, ref float hdpi, ref float vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, ref float ddpi, float* hdpi, float* vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, ref float ddpi, float* hdpi, ref float vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayDPI(int displayIndex, ref float ddpi, ref float hdpi, float* vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayDPI", Convention = CallingConvention.Winapi)]
        public partial int GetDisplayDPI(int displayIndex, ref float ddpi, ref float hdpi, ref float vdpi);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 447, Column 48 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayOrientation", Convention = CallingConvention.Winapi)]
        public partial DisplayOrientation GetDisplayOrientation(int displayIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 464, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetNumDisplayModes", Convention = CallingConvention.Winapi)]
        public partial int GetNumDisplayModes(int displayIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 486, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDisplayMode(int displayIndex, int modeIndex, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 486, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDisplayMode", Convention = CallingConvention.Winapi)]
        public partial int GetDisplayMode(int displayIndex, int modeIndex, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 507, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDesktopDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetDesktopDisplayMode(int displayIndex, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 507, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetDesktopDisplayMode", Convention = CallingConvention.Winapi)]
        public partial int GetDesktopDisplayMode(int displayIndex, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetCurrentDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetCurrentDisplayMode(int displayIndex, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 528, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetCurrentDisplayMode", Convention = CallingConvention.Winapi)]
        public partial int GetCurrentDisplayMode(int displayIndex, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 552, Column 43 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetClosestDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial DisplayMode* GetClosestDisplayMode(int displayIndex, DisplayMode* mode, DisplayMode* closest);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 552, Column 43 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetClosestDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial DisplayMode* GetClosestDisplayMode(int displayIndex, DisplayMode* mode, ref DisplayMode closest);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 552, Column 43 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetClosestDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial DisplayMode* GetClosestDisplayMode(int displayIndex, ref DisplayMode mode, DisplayMode* closest);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 552, Column 43 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetClosestDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial DisplayMode* GetClosestDisplayMode(int displayIndex, ref DisplayMode mode, ref DisplayMode closest);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowDisplayIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowDisplayIndex(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowDisplayIndex", Convention = CallingConvention.Winapi)]
        public partial int GetWindowDisplayIndex(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 584, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowDisplayMode(Window* window, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 584, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowDisplayMode(Window* window, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 584, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowDisplayMode(ref Window window, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 584, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public partial int SetWindowDisplayMode(ref Window window, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowDisplayMode(Window* window, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowDisplayMode(Window* window, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowDisplayMode(ref Window window, DisplayMode* mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowDisplayMode", Convention = CallingConvention.Winapi)]
        public partial int GetWindowDisplayMode(ref Window window, ref DisplayMode mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 610, Column 32 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPixelFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetWindowPixelFormat(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 610, Column 32 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPixelFormat", Convention = CallingConvention.Winapi)]
        public partial uint GetWindowPixelFormat(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 680, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateWindow(byte* title, int x, int y, int w, int h, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 680, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateWindow(ref byte title, int x, int y, int w, int h, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 680, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateWindow([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, int x, int y, int w, int h, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 699, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindowFrom", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateWindowFrom(void* data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 699, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindowFrom", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateWindowFrom<T0>(ref T0 data) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 715, Column 32 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowID", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetWindowID(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 715, Column 32 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowID", Convention = CallingConvention.Winapi)]
        public partial uint GetWindowID(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 729, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowFromID", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* GetWindowFromID(uint id);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 745, Column 32 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowFlags", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetWindowFlags(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 745, Column 32 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowFlags", Convention = CallingConvention.Winapi)]
        public partial uint GetWindowFlags(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowTitle(Window* window, byte* title);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowTitle(Window* window, ref byte title);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowTitle(Window* window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowTitle(ref Window window, byte* title);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowTitle", Convention = CallingConvention.Winapi)]
        public partial void SetWindowTitle(ref Window window, ref byte title);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowTitle", Convention = CallingConvention.Winapi)]
        public partial void SetWindowTitle(ref Window window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 769, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetWindowTitle(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 769, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetWindowTitleS(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 769, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowTitle", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetWindowTitle(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 769, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetWindowTitle", Convention = CallingConvention.Winapi)]
        public partial string GetWindowTitleS(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 777, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowIcon", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowIcon(Window* window, Surface* icon);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 777, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowIcon", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowIcon(Window* window, ref Surface icon);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 777, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowIcon", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowIcon(ref Window window, Surface* icon);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 777, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowIcon", Convention = CallingConvention.Winapi)]
        public partial void SetWindowIcon(ref Window window, ref Surface icon);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData(Window* window, byte* name, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData<T0>(Window* window, byte* name, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData(Window* window, ref byte name, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData<T0>(Window* window, ref byte name, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData(Window* window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData<T0>(Window* window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData(ref Window window, byte* name, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData<T0>(ref Window window, byte* name, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData(ref Window window, ref byte name, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData<T0>(ref Window window, ref byte name, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData(ref Window window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SetWindowData<T0>(ref Window window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 805, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GetWindowData(Window* window, byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 805, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GetWindowData(Window* window, ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 805, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GetWindowData(Window* window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 805, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GetWindowData(ref Window window, byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 805, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GetWindowData(ref Window window, ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 805, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowData", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GetWindowData(ref Window window, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowPosition(Window* window, int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowPosition", Convention = CallingConvention.Winapi)]
        public partial void SetWindowPosition(ref Window window, int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(Window* window, int* x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(Window* window, int* x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(Window* window, ref int x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(Window* window, ref int x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(ref Window window, int* x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(ref Window window, int* x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowPosition(ref Window window, ref int x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 838, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowPosition", Convention = CallingConvention.Winapi)]
        public partial void GetWindowPosition(ref Window window, ref int x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 861, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowSize(Window* window, int w, int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 861, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowSize", Convention = CallingConvention.Winapi)]
        public partial void SetWindowSize(ref Window window, int w, int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(Window* window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(Window* window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(Window* window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(Window* window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(ref Window window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(ref Window window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowSize(ref Window window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 886, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSize", Convention = CallingConvention.Winapi)]
        public partial void GetWindowSize(ref Window window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, int* left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, int* left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, int* left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, int* left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, ref int left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, ref int left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, ref int left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, int* top, ref int left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, int* left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, int* left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, int* left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, int* left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, ref int left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, ref int left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, ref int left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(Window* window, ref int top, ref int left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, int* left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, int* left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, int* left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, int* left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, ref int left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, ref int left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, ref int left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, int* top, ref int left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, int* left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, int* left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, int* left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, int* left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, ref int left, int* bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, ref int left, int* bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowBordersSize(ref Window window, ref int top, ref int left, ref int bottom, int* right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBordersSize", Convention = CallingConvention.Winapi)]
        public partial int GetWindowBordersSize(ref Window window, ref int top, ref int left, ref int bottom, ref int right);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 929, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowMinimumSize(Window* window, int min_w, int min_h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 929, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public partial void SetWindowMinimumSize(ref Window window, int min_w, int min_h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(Window* window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(Window* window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(Window* window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(Window* window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(ref Window window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(ref Window window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMinimumSize(ref Window window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 944, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMinimumSize", Convention = CallingConvention.Winapi)]
        public partial void GetWindowMinimumSize(ref Window window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 957, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowMaximumSize(Window* window, int max_w, int max_h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 957, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public partial void SetWindowMaximumSize(ref Window window, int max_w, int max_h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(Window* window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(Window* window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(Window* window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(Window* window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(ref Window window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(ref Window window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetWindowMaximumSize(ref Window window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 972, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMaximumSize", Convention = CallingConvention.Winapi)]
        public partial void GetWindowMaximumSize(ref Window window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowBordered", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowBordered(Window* window, SdlBool bordered);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowBordered", Convention = CallingConvention.Winapi)]
        public partial void SetWindowBordered(ref Window window, SdlBool bordered);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1010, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowResizable", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowResizable(Window* window, SdlBool resizable);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1010, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowResizable", Convention = CallingConvention.Winapi)]
        public partial void SetWindowResizable(ref Window window, SdlBool resizable);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1021, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_ShowWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void ShowWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1021, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_ShowWindow", Convention = CallingConvention.Winapi)]
        public partial void ShowWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1030, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_HideWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void HideWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1030, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_HideWindow", Convention = CallingConvention.Winapi)]
        public partial void HideWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1037, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_RaiseWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void RaiseWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1037, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_RaiseWindow", Convention = CallingConvention.Winapi)]
        public partial void RaiseWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1047, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_MaximizeWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void MaximizeWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1047, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_MaximizeWindow", Convention = CallingConvention.Winapi)]
        public partial void MaximizeWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1057, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_MinimizeWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void MinimizeWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1057, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_MinimizeWindow", Convention = CallingConvention.Winapi)]
        public partial void MinimizeWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1067, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_RestoreWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void RestoreWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1067, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_RestoreWindow", Convention = CallingConvention.Winapi)]
        public partial void RestoreWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1086, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowFullscreen", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowFullscreen(Window* window, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1086, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowFullscreen", Convention = CallingConvention.Winapi)]
        public partial int SetWindowFullscreen(ref Window window, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1110, Column 39 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* GetWindowSurface(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1110, Column 39 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Surface* GetWindowSurface(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1127, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_UpdateWindowSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateWindowSurface(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1127, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_UpdateWindowSurface", Convention = CallingConvention.Winapi)]
        public partial int UpdateWindowSurface(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_UpdateWindowSurfaceRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateWindowSurfaceRects(Window* window, Silk.NET.Maths.Rectangle<int>* rects, int numrects);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_UpdateWindowSurfaceRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateWindowSurfaceRects(Window* window, ref Silk.NET.Maths.Rectangle<int> rects, int numrects);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_UpdateWindowSurfaceRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateWindowSurfaceRects(ref Window window, Silk.NET.Maths.Rectangle<int>* rects, int numrects);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_UpdateWindowSurfaceRects", Convention = CallingConvention.Winapi)]
        public partial int UpdateWindowSurfaceRects(ref Window window, ref Silk.NET.Maths.Rectangle<int> rects, int numrects);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGrab", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowGrab(Window* window, SdlBool grabbed);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGrab", Convention = CallingConvention.Winapi)]
        public partial void SetWindowGrab(ref Window window, SdlBool grabbed);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1181, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowKeyboardGrab", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowKeyboardGrab(Window* window, SdlBool grabbed);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1181, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowKeyboardGrab", Convention = CallingConvention.Winapi)]
        public partial void SetWindowKeyboardGrab(ref Window window, SdlBool grabbed);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1197, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowMouseGrab", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowMouseGrab(Window* window, SdlBool grabbed);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1197, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowMouseGrab", Convention = CallingConvention.Winapi)]
        public partial void SetWindowMouseGrab(ref Window window, SdlBool grabbed);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1208, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGrab", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetWindowGrab(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1208, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGrab", Convention = CallingConvention.Winapi)]
        public partial SdlBool GetWindowGrab(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1219, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowKeyboardGrab", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetWindowKeyboardGrab(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1219, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowKeyboardGrab", Convention = CallingConvention.Winapi)]
        public partial SdlBool GetWindowKeyboardGrab(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1230, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMouseGrab", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetWindowMouseGrab(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1230, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowMouseGrab", Convention = CallingConvention.Winapi)]
        public partial SdlBool GetWindowMouseGrab(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1242, Column 38 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetGrabbedWindow")]
        public unsafe partial Window* GetGrabbedWindow();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1268, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowBrightness", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowBrightness(Window* window, float brightness);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1268, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowBrightness", Convention = CallingConvention.Winapi)]
        public partial int SetWindowBrightness(ref Window window, float brightness);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1285, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBrightness", Convention = CallingConvention.Winapi)]
        public unsafe partial float GetWindowBrightness(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1285, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowBrightness", Convention = CallingConvention.Winapi)]
        public partial float GetWindowBrightness(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1304, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowOpacity", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowOpacity(Window* window, float opacity);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1304, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowOpacity", Convention = CallingConvention.Winapi)]
        public partial int SetWindowOpacity(ref Window window, float opacity);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1325, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowOpacity", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowOpacity(Window* window, float* out_opacity);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1325, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowOpacity", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowOpacity(Window* window, ref float out_opacity);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1325, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowOpacity", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowOpacity(ref Window window, float* out_opacity);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1325, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowOpacity", Convention = CallingConvention.Winapi)]
        public partial int GetWindowOpacity(ref Window window, ref float out_opacity);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1337, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowModalFor", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowModalFor(Window* modal_window, Window* parent_window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1337, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowModalFor", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowModalFor(Window* modal_window, ref Window parent_window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1337, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowModalFor", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowModalFor(ref Window modal_window, Window* parent_window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1337, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowModalFor", Convention = CallingConvention.Winapi)]
        public partial int SetWindowModalFor(ref Window modal_window, ref Window parent_window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1354, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowInputFocus", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowInputFocus(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1354, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowInputFocus", Convention = CallingConvention.Winapi)]
        public partial int SetWindowInputFocus(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ushort* red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ushort* red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ushort* red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ushort* red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ref ushort red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ref ushort red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ref ushort red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(Window* window, ref ushort red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ushort* red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ushort* red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ushort* red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ushort* red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ref ushort red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ref ushort red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowGammaRamp(ref Window window, ref ushort red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1383, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public partial int SetWindowGammaRamp(ref Window window, ref ushort red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ushort* red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ushort* red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ushort* red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ushort* red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ref ushort red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ref ushort red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ref ushort red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(Window* window, ref ushort red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ushort* red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ushort* red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ushort* red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ushort* red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ref ushort red, ushort* green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ref ushort red, ushort* green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetWindowGammaRamp(ref Window window, ref ushort red, ref ushort green, ushort* blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GetWindowGammaRamp", Convention = CallingConvention.Winapi)]
        public partial int GetWindowGammaRamp(ref Window window, ref ushort red, ref ushort green, ref ushort blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1487, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowHitTest", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowHitTest(Window* window, PfnHitTest callback, void* callback_data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1487, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowHitTest", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowHitTest<T0>(Window* window, PfnHitTest callback, ref T0 callback_data) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1487, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowHitTest", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowHitTest(ref Window window, PfnHitTest callback, void* callback_data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1487, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowHitTest", Convention = CallingConvention.Winapi)]
        public partial int SetWindowHitTest<T0>(ref Window window, PfnHitTest callback, ref T0 callback_data) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1502, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_DestroyWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void DestroyWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1502, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_DestroyWindow", Convention = CallingConvention.Winapi)]
        public partial void DestroyWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1521, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_IsScreenSaverEnabled")]
        public partial SdlBool IsScreenSaverEnabled();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1531, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_EnableScreenSaver")]
        public partial void EnableScreenSaver();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1544, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_DisableScreenSaver")]
        public partial void DisableScreenSaver();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_LoadLibrary", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLLoadLibrary(byte* path);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_LoadLibrary", Convention = CallingConvention.Winapi)]
        public partial int GLLoadLibrary(ref byte path);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_LoadLibrary", Convention = CallingConvention.Winapi)]
        public partial int GLLoadLibrary([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string path);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1621, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetProcAddress", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GLGetProcAddress(byte* proc);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1621, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetProcAddress", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GLGetProcAddress(ref byte proc);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1621, Column 31 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetProcAddress", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GLGetProcAddress([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string proc);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1628, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_UnloadLibrary")]
        public partial void GLUnloadLibrary();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1649, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_ExtensionSupported", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GLExtensionSupported(byte* extension);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1649, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_ExtensionSupported", Convention = CallingConvention.Winapi)]
        public partial SdlBool GLExtensionSupported(ref byte extension);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1649, Column 34 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_ExtensionSupported", Convention = CallingConvention.Winapi)]
        public partial SdlBool GLExtensionSupported([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string extension);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1661, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_ResetAttributes")]
        public partial void GLResetAttributes();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1680, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_SetAttribute", Convention = CallingConvention.Winapi)]
        public partial int GLSetAttribute(GLattr attr, int value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1693, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetAttribute", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLGetAttribute(GLattr attr, int* value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1693, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetAttribute", Convention = CallingConvention.Winapi)]
        public partial int GLGetAttribute(GLattr attr, ref int value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1713, Column 39 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_CreateContext", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GLCreateContext(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1713, Column 39 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_CreateContext", Convention = CallingConvention.Winapi)]
        public unsafe partial void* GLCreateContext(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1728, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_MakeCurrent", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLMakeCurrent(Window* window, void* context);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1728, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_MakeCurrent", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLMakeCurrent<T0>(Window* window, ref T0 context) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1728, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_MakeCurrent", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLMakeCurrent(ref Window window, void* context);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1728, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_MakeCurrent", Convention = CallingConvention.Winapi)]
        public partial int GLMakeCurrent<T0>(ref Window window, ref T0 context) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1739, Column 37 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetCurrentWindow")]
        public unsafe partial Window* GLGetCurrentWindow();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1751, Column 39 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetCurrentContext")]
        public unsafe partial void* GLGetCurrentContext();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(Window* window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(Window* window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(Window* window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(Window* window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(ref Window window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(ref Window window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLGetDrawableSize(ref Window window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1773, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public partial void GLGetDrawableSize(ref Window window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1808, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_SetSwapInterval", Convention = CallingConvention.Winapi)]
        public partial int GLSetSwapInterval(int interval);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1825, Column 29 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_GetSwapInterval")]
        public partial int GLGetSwapInterval();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1839, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_SwapWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLSwapWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1839, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_SwapWindow", Convention = CallingConvention.Winapi)]
        public partial void GLSwapWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1848, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_DeleteContext", Convention = CallingConvention.Winapi)]
        public unsafe partial void GLDeleteContext(void* context);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1848, Column 30 in build/submodules/SDL/include\\SDL_video.h")]
        [NativeApi(EntryPoint = "SDL_GL_DeleteContext", Convention = CallingConvention.Winapi)]
        public partial void GLDeleteContext<T0>(ref T0 context) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 109, Column 29 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_LoadLibrary", Convention = CallingConvention.Winapi)]
        public unsafe partial int VulkanLoadLibrary(byte* path);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 109, Column 29 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_LoadLibrary", Convention = CallingConvention.Winapi)]
        public partial int VulkanLoadLibrary(ref byte path);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 109, Column 29 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_LoadLibrary", Convention = CallingConvention.Winapi)]
        public partial int VulkanLoadLibrary([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string path);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 119, Column 31 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetVkGetInstanceProcAddr")]
        public unsafe partial void* VulkanGetVkGetInstanceProcAddr();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 128, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_UnloadLibrary")]
        public partial void VulkanUnloadLibrary();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(Window* window, uint* pCount, byte** pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(Window* window, uint* pCount, ref byte* pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(Window* window, ref uint pCount, byte** pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(Window* window, ref uint pCount, ref byte* pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(ref Window window, uint* pCount, byte** pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(ref Window window, uint* pCount, ref byte* pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(ref Window window, ref uint pCount, byte** pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetInstanceExtensions", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanGetInstanceExtensions(ref Window window, ref uint pCount, ref byte* pNames);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 182, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_CreateSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanCreateSurface(Window* window, Silk.NET.Core.Native.VkHandle instance, Silk.NET.Core.Native.VkNonDispatchableHandle* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 182, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_CreateSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanCreateSurface(Window* window, Silk.NET.Core.Native.VkHandle instance, ref Silk.NET.Core.Native.VkNonDispatchableHandle surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 182, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_CreateSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool VulkanCreateSurface(ref Window window, Silk.NET.Core.Native.VkHandle instance, Silk.NET.Core.Native.VkNonDispatchableHandle* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 182, Column 34 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_CreateSurface", Convention = CallingConvention.Winapi)]
        public partial SdlBool VulkanCreateSurface(ref Window window, Silk.NET.Core.Native.VkHandle instance, ref Silk.NET.Core.Native.VkNonDispatchableHandle surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(Window* window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(Window* window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(Window* window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(Window* window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(ref Window window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(ref Window window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void VulkanGetDrawableSize(ref Window window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 30 in SDL_vulkan.h")]
        [NativeApi(EntryPoint = "SDL_Vulkan_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public partial void VulkanGetDrawableSize(ref Window window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 134, Column 30 in build/submodules/SDL/include\\SDL_main.h")]
        [NativeApi(EntryPoint = "SDL_SetMainReady")]
        public partial void SetMainReady();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RegisterApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int RegisterApp(byte* name, uint style, void* hInst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RegisterApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int RegisterApp<T0>(byte* name, uint style, ref T0 hInst) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RegisterApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int RegisterApp(ref byte name, uint style, void* hInst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RegisterApp", Convention = CallingConvention.Winapi)]
        public partial int RegisterApp<T0>(ref byte name, uint style, ref T0 hInst) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RegisterApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int RegisterApp([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, uint style, void* hInst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RegisterApp", Convention = CallingConvention.Winapi)]
        public partial int RegisterApp<T0>([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, uint style, ref T0 hInst) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 142, Column 30 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_UnregisterApp")]
        public partial void UnregisterApp();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 159, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTRunApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int WinRTRunApp(PfnMainFunc mainFunction, void* reserved);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 159, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTRunApp", Convention = CallingConvention.Winapi)]
        public partial int WinRTRunApp<T0>(PfnMainFunc mainFunction, ref T0 reserved) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 173, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [NativeApi(EntryPoint = "SDL_UIKitRunApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int UIKitRunApp(int argc, byte** argv, PfnMainFunc mainFunction);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 173, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        [NativeApi(EntryPoint = "SDL_UIKitRunApp", Convention = CallingConvention.Winapi)]
        public unsafe partial int UIKitRunApp(int argc, ref byte* argv, PfnMainFunc mainFunction);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 52, Column 25 in build/submodules/SDL/include\\SDL_assert.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "__debugbreak")]
        public partial void Debugbreak();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, byte* arg1, byte* arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, byte* arg1, ref byte arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, byte* arg1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, ref byte arg1, byte* arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, ref byte arg1, ref byte arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, ref byte arg1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, byte* arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref byte arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(AssertData* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(ref AssertData arg0, byte* arg1, byte* arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(ref AssertData arg0, byte* arg1, ref byte arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(ref AssertData arg0, byte* arg1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(ref AssertData arg0, ref byte arg1, byte* arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public partial AssertState ReportAssertion(ref AssertData arg0, ref byte arg1, ref byte arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public partial AssertState ReportAssertion(ref AssertData arg0, ref byte arg1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public unsafe partial AssertState ReportAssertion(ref AssertData arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, byte* arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public partial AssertState ReportAssertion(ref AssertData arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref byte arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 41 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ReportAssertion", Convention = CallingConvention.Winapi)]
        public partial AssertState ReportAssertion(ref AssertData arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg2, int arg3);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 222, Column 30 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_SetAssertionHandler", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetAssertionHandler(PfnAssertionHandler handler, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 222, Column 30 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_SetAssertionHandler", Convention = CallingConvention.Winapi)]
        public partial void SetAssertionHandler<T0>(PfnAssertionHandler handler, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 241, Column 46 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_GetDefaultAssertionHandler")]
        public partial PfnAssertionHandler GetDefaultAssertionHandler();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 264, Column 46 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_GetAssertionHandler", Convention = CallingConvention.Winapi)]
        public unsafe partial PfnAssertionHandler GetAssertionHandler(void** puserdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 264, Column 46 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_GetAssertionHandler", Convention = CallingConvention.Winapi)]
        public unsafe partial PfnAssertionHandler GetAssertionHandler(ref void* puserdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 290, Column 48 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_GetAssertionReport")]
        public unsafe partial AssertData* GetAssertionReport();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 302, Column 30 in build/submodules/SDL/include\\SDL_assert.h")]
        [NativeApi(EntryPoint = "SDL_ResetAssertionReport")]
        public partial void ResetAssertionReport();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 104, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicTryLock", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicTryLock(int* @lock);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 104, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicTryLock", Convention = CallingConvention.Winapi)]
        public partial SdlBool AtomicTryLock(ref int @lock);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 117, Column 30 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicLock", Convention = CallingConvention.Winapi)]
        public unsafe partial void AtomicLock(int* @lock);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 117, Column 30 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicLock", Convention = CallingConvention.Winapi)]
        public partial void AtomicLock(ref int @lock);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 134, Column 30 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicUnlock", Convention = CallingConvention.Winapi)]
        public unsafe partial void AtomicUnlock(int* @lock);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 134, Column 30 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicUnlock", Convention = CallingConvention.Winapi)]
        public partial void AtomicUnlock(ref int @lock);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 177, Column 30 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_MemoryBarrierReleaseFunction")]
        public partial void MemoryBarrierReleaseFunction();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 178, Column 30 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_MemoryBarrierAcquireFunction")]
        public partial void MemoryBarrierAcquireFunction();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 258, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCAS", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCAS(AtomicT* a, int oldval, int newval);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 258, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCAS", Convention = CallingConvention.Winapi)]
        public partial SdlBool AtomicCAS(ref AtomicT a, int oldval, int newval);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 274, Column 29 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicSet", Convention = CallingConvention.Winapi)]
        public unsafe partial int AtomicSet(AtomicT* a, int v);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 274, Column 29 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicSet", Convention = CallingConvention.Winapi)]
        public partial int AtomicSet(ref AtomicT a, int v);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 29 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicGet", Convention = CallingConvention.Winapi)]
        public unsafe partial int AtomicGet(AtomicT* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 29 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicGet", Convention = CallingConvention.Winapi)]
        public partial int AtomicGet(ref AtomicT a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 304, Column 29 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicAdd", Convention = CallingConvention.Winapi)]
        public unsafe partial int AtomicAdd(AtomicT* a, int v);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 304, Column 29 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicAdd", Convention = CallingConvention.Winapi)]
        public partial int AtomicAdd(ref AtomicT a, int v);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr(void** a, void* oldval, void* newval);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr<T0>(void** a, void* oldval, ref T0 newval) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr<T0>(void** a, ref T0 oldval, void* newval) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr<T0, T1>(void** a, ref T0 oldval, ref T1 newval) where T0 : unmanaged where T1 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr(ref void* a, void* oldval, void* newval);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr<T0>(ref void* a, void* oldval, ref T0 newval) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr<T0>(ref void* a, ref T0 oldval, void* newval) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 341, Column 34 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicCASPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AtomicCASPtr<T0, T1>(ref void* a, ref T0 oldval, ref T1 newval) where T0 : unmanaged where T1 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 356, Column 31 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicSetPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial void* AtomicSetPtr(void** a, void* v);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 356, Column 31 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicSetPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial void* AtomicSetPtr<T0>(void** a, ref T0 v) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 356, Column 31 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicSetPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial void* AtomicSetPtr(ref void* a, void* v);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 356, Column 31 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicSetPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial void* AtomicSetPtr<T0>(ref void* a, ref T0 v) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 370, Column 31 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicGetPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial void* AtomicGetPtr(void** a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 370, Column 31 in build/submodules/SDL/include/SDL_atomic.h")]
        [NativeApi(EntryPoint = "SDL_AtomicGetPtr", Convention = CallingConvention.Winapi)]
        public unsafe partial void* AtomicGetPtr(ref void* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 36 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CreateMutex")]
        public unsafe partial Mutex* CreateMutex();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 95, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_LockMutex", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockMutex(Mutex* mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 95, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_LockMutex", Convention = CallingConvention.Winapi)]
        public partial int LockMutex(ref Mutex mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_TryLockMutex", Convention = CallingConvention.Winapi)]
        public unsafe partial int TryLockMutex(Mutex* mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_TryLockMutex", Convention = CallingConvention.Winapi)]
        public partial int TryLockMutex(ref Mutex mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 133, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_UnlockMutex", Convention = CallingConvention.Winapi)]
        public unsafe partial int UnlockMutex(Mutex* mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 133, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_UnlockMutex", Convention = CallingConvention.Winapi)]
        public partial int UnlockMutex(ref Mutex mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 152, Column 30 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_DestroyMutex", Convention = CallingConvention.Winapi)]
        public unsafe partial void DestroyMutex(Mutex* mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 152, Column 30 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_DestroyMutex", Convention = CallingConvention.Winapi)]
        public partial void DestroyMutex(ref Mutex mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 186, Column 34 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CreateSemaphore", Convention = CallingConvention.Winapi)]
        public unsafe partial Semaphore* CreateSemaphore(uint initial_value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 30 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_DestroySemaphore", Convention = CallingConvention.Winapi)]
        public unsafe partial void DestroySemaphore(Semaphore* sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 30 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_DestroySemaphore", Convention = CallingConvention.Winapi)]
        public partial void DestroySemaphore(ref Semaphore sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemWait", Convention = CallingConvention.Winapi)]
        public unsafe partial int SemWait(Semaphore* sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemWait", Convention = CallingConvention.Winapi)]
        public partial int SemWait(ref Semaphore sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 250, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemTryWait", Convention = CallingConvention.Winapi)]
        public unsafe partial int SemTryWait(Semaphore* sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 250, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemTryWait", Convention = CallingConvention.Winapi)]
        public partial int SemTryWait(ref Semaphore sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 274, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemWaitTimeout", Convention = CallingConvention.Winapi)]
        public unsafe partial int SemWaitTimeout(Semaphore* sem, uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 274, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemWaitTimeout", Convention = CallingConvention.Winapi)]
        public partial int SemWaitTimeout(ref Semaphore sem, uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 290, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemPost", Convention = CallingConvention.Winapi)]
        public unsafe partial int SemPost(Semaphore* sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 290, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemPost", Convention = CallingConvention.Winapi)]
        public partial int SemPost(ref Semaphore sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 32 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemValue", Convention = CallingConvention.Winapi)]
        public unsafe partial uint SemValue(Semaphore* sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 32 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_SemValue", Convention = CallingConvention.Winapi)]
        public partial uint SemValue(ref Semaphore sem);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 326, Column 35 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CreateCond")]
        public unsafe partial Cond* CreateCond();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 339, Column 30 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_DestroyCond", Convention = CallingConvention.Winapi)]
        public unsafe partial void DestroyCond(Cond* cond);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 339, Column 30 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_DestroyCond", Convention = CallingConvention.Winapi)]
        public partial void DestroyCond(ref Cond cond);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 354, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondSignal", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondSignal(Cond* cond);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 354, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondSignal", Convention = CallingConvention.Winapi)]
        public partial int CondSignal(ref Cond cond);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 369, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondBroadcast", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondBroadcast(Cond* cond);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 369, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondBroadcast", Convention = CallingConvention.Winapi)]
        public partial int CondBroadcast(ref Cond cond);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 395, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWait", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondWait(Cond* cond, Mutex* mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 395, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWait", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondWait(Cond* cond, ref Mutex mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 395, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWait", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondWait(ref Cond cond, Mutex* mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 395, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWait", Convention = CallingConvention.Winapi)]
        public partial int CondWait(ref Cond cond, ref Mutex mutex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWaitTimeout", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondWaitTimeout(Cond* cond, Mutex* mutex, uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWaitTimeout", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondWaitTimeout(Cond* cond, ref Mutex mutex, uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWaitTimeout", Convention = CallingConvention.Winapi)]
        public unsafe partial int CondWaitTimeout(ref Cond cond, Mutex* mutex, uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 29 in build/submodules/SDL/include\\SDL_mutex.h")]
        [NativeApi(EntryPoint = "SDL_CondWaitTimeout", Convention = CallingConvention.Winapi)]
        public partial int CondWaitTimeout(ref Cond cond, ref Mutex mutex, uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 120, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThread", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThread(PfnThreadFunction fn, byte* name, void* data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 120, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThread", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThread<T0>(PfnThreadFunction fn, byte* name, ref T0 data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 120, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThread", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThread(PfnThreadFunction fn, ref byte name, void* data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 120, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThread", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThread<T0>(PfnThreadFunction fn, ref byte name, ref T0 data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 120, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThread", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThread(PfnThreadFunction fn, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, void* data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 120, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThread", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThread<T0>(PfnThreadFunction fn, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, ref T0 data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 125, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThreadWithStackSize", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThreadWithStackSize(PfnThreadFunction fn, byte* name, nuint stacksize, void* data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 125, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThreadWithStackSize", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThreadWithStackSize<T0>(PfnThreadFunction fn, byte* name, nuint stacksize, ref T0 data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 125, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThreadWithStackSize", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThreadWithStackSize(PfnThreadFunction fn, ref byte name, nuint stacksize, void* data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 125, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThreadWithStackSize", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThreadWithStackSize<T0>(PfnThreadFunction fn, ref byte name, nuint stacksize, ref T0 data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 125, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThreadWithStackSize", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThreadWithStackSize(PfnThreadFunction fn, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, nuint stacksize, void* data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 125, Column 1 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_CreateThreadWithStackSize", Convention = CallingConvention.Winapi)]
        public unsafe partial Thread* CreateThreadWithStackSize<T0>(PfnThreadFunction fn, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, nuint stacksize, ref T0 data, PfnSDLCurrentBeginThread pfnBeginThread, PfnSDLCurrentEndThread pfnEndThread) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 269, Column 37 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_GetThreadName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetThreadName(Thread* thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 269, Column 37 in build/submodules/SDL/include\\SDL_thread.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetThreadName", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetThreadNameS(Thread* thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 269, Column 37 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_GetThreadName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetThreadName(ref Thread thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 269, Column 37 in build/submodules/SDL/include\\SDL_thread.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetThreadName", Convention = CallingConvention.Winapi)]
        public partial string GetThreadNameS(ref Thread thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 285, Column 38 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_ThreadID")]
        public partial uint ThreadID();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 38 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_GetThreadID", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetThreadID(Thread* thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 38 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_GetThreadID", Convention = CallingConvention.Winapi)]
        public partial uint GetThreadID(ref Thread thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 313, Column 29 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_SetThreadPriority", Convention = CallingConvention.Winapi)]
        public partial int SetThreadPriority(ThreadPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 346, Column 30 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_WaitThread", Convention = CallingConvention.Winapi)]
        public unsafe partial void WaitThread(Thread* thread, int* status);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 346, Column 30 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_WaitThread", Convention = CallingConvention.Winapi)]
        public unsafe partial void WaitThread(Thread* thread, ref int status);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 346, Column 30 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_WaitThread", Convention = CallingConvention.Winapi)]
        public unsafe partial void WaitThread(ref Thread thread, int* status);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 346, Column 30 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_WaitThread", Convention = CallingConvention.Winapi)]
        public partial void WaitThread(ref Thread thread, ref int status);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 382, Column 30 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_DetachThread", Convention = CallingConvention.Winapi)]
        public unsafe partial void DetachThread(Thread* thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 382, Column 30 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_DetachThread", Convention = CallingConvention.Winapi)]
        public partial void DetachThread(ref Thread thread);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 397, Column 35 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_TLSCreate")]
        public partial uint TLSCreate();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 411, Column 32 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_TLSGet", Convention = CallingConvention.Winapi)]
        public unsafe partial void* TLSGet(uint id);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_TLSSet", Convention = CallingConvention.Winapi)]
        public unsafe partial int TLSSet(uint id, void* value, PfnFreeFunc destructor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 29 in build/submodules/SDL/include\\SDL_thread.h")]
        [NativeApi(EntryPoint = "SDL_TLSSet", Convention = CallingConvention.Winapi)]
        public partial int TLSSet<T0>(uint id, ref T0 value, PfnFreeFunc destructor) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 253, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetNumAudioDrivers")]
        public partial int GetNumAudioDrivers();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 254, Column 37 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetAudioDriver", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetAudioDriver(int index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 254, Column 37 in build/submodules/SDL/include\\SDL_audio.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetAudioDriver", Convention = CallingConvention.Winapi)]
        public partial string GetAudioDriverS(int index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 265, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioInit", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioInit(byte* driver_name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 265, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioInit", Convention = CallingConvention.Winapi)]
        public partial int AudioInit(ref byte driver_name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 265, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioInit", Convention = CallingConvention.Winapi)]
        public partial int AudioInit([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string driver_name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 266, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioQuit")]
        public partial void AudioQuit();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 285, Column 37 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetCurrentAudioDriver")]
        public unsafe partial byte* GetCurrentAudioDriver();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 285, Column 37 in build/submodules/SDL/include\\SDL_audio.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetCurrentAudioDriver", Convention = CallingConvention.Winapi)]
        public partial string GetCurrentAudioDriverS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial int OpenAudio(AudioSpec* desired, AudioSpec* obtained);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial int OpenAudio(AudioSpec* desired, ref AudioSpec obtained);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial int OpenAudio(ref AudioSpec desired, AudioSpec* obtained);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudio", Convention = CallingConvention.Winapi)]
        public partial int OpenAudio(ref AudioSpec desired, ref AudioSpec obtained);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 391, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetNumAudioDevices", Convention = CallingConvention.Winapi)]
        public partial int GetNumAudioDevices(int iscapture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 415, Column 37 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetAudioDeviceName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetAudioDeviceName(int index, int iscapture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 415, Column 37 in build/submodules/SDL/include\\SDL_audio.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetAudioDeviceName", Convention = CallingConvention.Winapi)]
        public partial string GetAudioDeviceNameS(int index, int iscapture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 440, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetAudioDeviceSpec", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetAudioDeviceSpec(int index, int iscapture, AudioSpec* spec);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 440, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetAudioDeviceSpec", Convention = CallingConvention.Winapi)]
        public partial int GetAudioDeviceSpec(int index, int iscapture, ref AudioSpec spec);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(byte* device, int iscapture, AudioSpec* desired, AudioSpec* obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(byte* device, int iscapture, AudioSpec* desired, ref AudioSpec obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(byte* device, int iscapture, ref AudioSpec desired, AudioSpec* obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(byte* device, int iscapture, ref AudioSpec desired, ref AudioSpec obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(ref byte device, int iscapture, AudioSpec* desired, AudioSpec* obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(ref byte device, int iscapture, AudioSpec* desired, ref AudioSpec obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice(ref byte device, int iscapture, ref AudioSpec desired, AudioSpec* obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public partial uint OpenAudioDevice(ref byte device, int iscapture, ref AudioSpec desired, ref AudioSpec obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string device, int iscapture, AudioSpec* desired, AudioSpec* obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string device, int iscapture, AudioSpec* desired, ref AudioSpec obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public unsafe partial uint OpenAudioDevice([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string device, int iscapture, ref AudioSpec desired, AudioSpec* obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 551, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_OpenAudioDevice", Convention = CallingConvention.Winapi)]
        public partial uint OpenAudioDevice([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string device, int iscapture, ref AudioSpec desired, ref AudioSpec obtained, int allowed_changes);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 576, Column 41 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetAudioStatus")]
        public partial AudioStatus GetAudioStatus();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 577, Column 41 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetAudioDeviceStatus", Convention = CallingConvention.Winapi)]
        public partial AudioStatus GetAudioDeviceStatus(uint dev);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 590, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_PauseAudio", Convention = CallingConvention.Winapi)]
        public partial void PauseAudio(int pause_on);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 591, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_PauseAudioDevice", Convention = CallingConvention.Winapi)]
        public partial void PauseAudioDevice(uint dev, int pause_on);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, AudioSpec* spec, byte** audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, AudioSpec* spec, byte** audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, AudioSpec* spec, ref byte* audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, AudioSpec* spec, ref byte* audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, ref AudioSpec spec, byte** audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, ref AudioSpec spec, byte** audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, ref AudioSpec spec, ref byte* audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(RWops* src, int freesrc, ref AudioSpec spec, ref byte* audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, AudioSpec* spec, byte** audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, AudioSpec* spec, byte** audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, AudioSpec* spec, ref byte* audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, AudioSpec* spec, ref byte* audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, ref AudioSpec spec, byte** audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, ref AudioSpec spec, byte** audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, ref AudioSpec spec, ref byte* audio_buf, uint* audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LoadWAV_RW", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioSpec* LoadWAVRW(ref RWops src, int freesrc, ref AudioSpec spec, ref byte* audio_buf, ref uint audio_len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 696, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_FreeWAV", Convention = CallingConvention.Winapi)]
        public unsafe partial void FreeWAV(byte* audio_buf);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 696, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_FreeWAV", Convention = CallingConvention.Winapi)]
        public partial void FreeWAV(ref byte audio_buf);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 696, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_FreeWAV", Convention = CallingConvention.Winapi)]
        public partial void FreeWAV([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string audio_buf);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 729, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_BuildAudioCVT", Convention = CallingConvention.Winapi)]
        public unsafe partial int BuildAudioCVT(AudioCVT* cvt, ushort src_format, byte src_channels, int src_rate, ushort dst_format, byte dst_channels, int dst_rate);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 729, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_BuildAudioCVT", Convention = CallingConvention.Winapi)]
        public partial int BuildAudioCVT(ref AudioCVT cvt, ushort src_format, byte src_channels, int src_rate, ushort dst_format, byte dst_channels, int dst_rate);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 773, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_ConvertAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial int ConvertAudio(AudioCVT* cvt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 773, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_ConvertAudio", Convention = CallingConvention.Winapi)]
        public partial int ConvertAudio(ref AudioCVT cvt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 804, Column 43 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_NewAudioStream", Convention = CallingConvention.Winapi)]
        public unsafe partial AudioStream* NewAudioStream(ushort src_format, byte src_channels, int src_rate, ushort dst_format, byte dst_channels, int dst_rate);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 826, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamPut", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamPut(AudioStream* stream, void* buf, int len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 826, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamPut", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamPut<T0>(AudioStream* stream, ref T0 buf, int len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 826, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamPut", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamPut(ref AudioStream stream, void* buf, int len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 826, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamPut", Convention = CallingConvention.Winapi)]
        public partial int AudioStreamPut<T0>(ref AudioStream stream, ref T0 buf, int len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 843, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamGet", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamGet(AudioStream* stream, void* buf, int len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 843, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamGet", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamGet<T0>(AudioStream* stream, ref T0 buf, int len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 843, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamGet", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamGet(ref AudioStream stream, void* buf, int len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 843, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamGet", Convention = CallingConvention.Winapi)]
        public partial int AudioStreamGet<T0>(ref AudioStream stream, ref T0 buf, int len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamAvailable", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamAvailable(AudioStream* stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 858, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamAvailable", Convention = CallingConvention.Winapi)]
        public partial int AudioStreamAvailable(ref AudioStream stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamFlush", Convention = CallingConvention.Winapi)]
        public unsafe partial int AudioStreamFlush(AudioStream* stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamFlush", Convention = CallingConvention.Winapi)]
        public partial int AudioStreamFlush(ref AudioStream stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 887, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamClear", Convention = CallingConvention.Winapi)]
        public unsafe partial void AudioStreamClear(AudioStream* stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 887, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_AudioStreamClear", Convention = CallingConvention.Winapi)]
        public partial void AudioStreamClear(ref AudioStream stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 899, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_FreeAudioStream", Convention = CallingConvention.Winapi)]
        public unsafe partial void FreeAudioStream(AudioStream* stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 899, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_FreeAudioStream", Convention = CallingConvention.Winapi)]
        public partial void FreeAudioStream(ref AudioStream stream);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudio(byte* dst, byte* src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudio(byte* dst, ref byte src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudio(byte* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudio(ref byte dst, byte* src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public partial void MixAudio(ref byte dst, ref byte src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public partial void MixAudio(ref byte dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudio([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, byte* src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public partial void MixAudio([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref byte src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudio", Convention = CallingConvention.Winapi)]
        public partial void MixAudio([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudioFormat(byte* dst, byte* src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudioFormat(byte* dst, ref byte src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudioFormat(byte* dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudioFormat(ref byte dst, byte* src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public partial void MixAudioFormat(ref byte dst, ref byte src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public partial void MixAudioFormat(ref byte dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public unsafe partial void MixAudioFormat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, byte* src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public partial void MixAudioFormat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, ref byte src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 953, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_MixAudioFormat", Convention = CallingConvention.Winapi)]
        public partial void MixAudioFormat([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string dst, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string src, ushort format, uint len, int volume);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1000, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_QueueAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueueAudio(uint dev, void* data, uint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1000, Column 29 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_QueueAudio", Convention = CallingConvention.Winapi)]
        public partial int QueueAudio<T0>(uint dev, ref T0 data, uint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1048, Column 32 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_DequeueAudio", Convention = CallingConvention.Winapi)]
        public unsafe partial uint DequeueAudio(uint dev, void* data, uint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1048, Column 32 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_DequeueAudio", Convention = CallingConvention.Winapi)]
        public partial uint DequeueAudio<T0>(uint dev, ref T0 data, uint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1083, Column 32 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_GetQueuedAudioSize", Convention = CallingConvention.Winapi)]
        public partial uint GetQueuedAudioSize(uint dev);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1117, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_ClearQueuedAudio", Convention = CallingConvention.Winapi)]
        public partial void ClearQueuedAudio(uint dev);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1129, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LockAudio")]
        public partial void LockAudio();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1130, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_LockAudioDevice", Convention = CallingConvention.Winapi)]
        public partial void LockAudioDevice(uint dev);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1131, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_UnlockAudio")]
        public partial void UnlockAudio();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1132, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_UnlockAudioDevice", Convention = CallingConvention.Winapi)]
        public partial void UnlockAudioDevice(uint dev);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1148, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_CloseAudio")]
        public partial void CloseAudio();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1149, Column 30 in build/submodules/SDL/include\\SDL_audio.h")]
        [NativeApi(EntryPoint = "SDL_CloseAudioDevice", Convention = CallingConvention.Winapi)]
        public partial void CloseAudioDevice(uint dev);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 51, Column 29 in build/submodules/SDL/include\\SDL_clipboard.h")]
        [NativeApi(EntryPoint = "SDL_SetClipboardText", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetClipboardText(byte* text);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 51, Column 29 in build/submodules/SDL/include\\SDL_clipboard.h")]
        [NativeApi(EntryPoint = "SDL_SetClipboardText", Convention = CallingConvention.Winapi)]
        public partial int SetClipboardText(ref byte text);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 51, Column 29 in build/submodules/SDL/include\\SDL_clipboard.h")]
        [NativeApi(EntryPoint = "SDL_SetClipboardText", Convention = CallingConvention.Winapi)]
        public partial int SetClipboardText([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string text);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 32 in build/submodules/SDL/include\\SDL_clipboard.h")]
        [NativeApi(EntryPoint = "SDL_GetClipboardText")]
        public unsafe partial byte* GetClipboardText();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 32 in build/submodules/SDL/include\\SDL_clipboard.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetClipboardText", Convention = CallingConvention.Winapi)]
        public partial string GetClipboardTextS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 78, Column 34 in build/submodules/SDL/include\\SDL_clipboard.h")]
        [NativeApi(EntryPoint = "SDL_HasClipboardText")]
        public partial SdlBool HasClipboardText();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 128, Column 29 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_GetCPUCount")]
        public partial int GetCPUCount();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 140, Column 29 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_GetCPUCacheLineSize")]
        public partial int GetCPUCacheLineSize();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasRDTSC")]
        public partial SdlBool HasRDTSC();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasAltiVec")]
        public partial SdlBool HasAltiVec();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 200, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasMMX")]
        public partial SdlBool HasMMX();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 220, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_Has3DNow")]
        public partial SdlBool Has3DNow();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasSSE")]
        public partial SdlBool HasSSE();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 260, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasSSE2")]
        public partial SdlBool HasSSE2();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 280, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasSSE3")]
        public partial SdlBool HasSSE3();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasSSE41")]
        public partial SdlBool HasSSE41();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 320, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasSSE42")]
        public partial SdlBool HasSSE42();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 342, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasAVX")]
        public partial SdlBool HasAVX();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 364, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasAVX2")]
        public partial SdlBool HasAVX2();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 375, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasAVX512F")]
        public partial SdlBool HasAVX512F();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 388, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasARMSIMD")]
        public partial SdlBool HasARMSIMD();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 397, Column 34 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_HasNEON")]
        public partial SdlBool HasNEON();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 406, Column 29 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_GetSystemRAM")]
        public partial int GetSystemRAM();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 32 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_SIMDGetAlignment")]
        public partial nuint SIMDGetAlignment();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 459, Column 32 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_SIMDAlloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SIMDAlloc(nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 481, Column 32 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_SIMDRealloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SIMDRealloc(void* mem, nuint len);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 481, Column 32 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_SIMDRealloc", Convention = CallingConvention.Winapi)]
        public unsafe partial void* SIMDRealloc<T0>(ref T0 mem, nuint len) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 30 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_SIMDFree", Convention = CallingConvention.Winapi)]
        public unsafe partial void SIMDFree(void* ptr);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 503, Column 30 in build/submodules/SDL/include\\SDL_cpuinfo.h")]
        [NativeApi(EntryPoint = "SDL_SIMDFree", Convention = CallingConvention.Winapi)]
        public partial void SIMDFree<T0>(ref T0 ptr) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 62, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyboardFocus")]
        public unsafe partial Window* GetKeyboardFocus();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 90, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyboardState", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetKeyboardState(int* numkeys);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 90, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetKeyboardState", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetKeyboardStateS(int* numkeys);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 90, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyboardState", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetKeyboardState(ref int numkeys);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 90, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetKeyboardState", Convention = CallingConvention.Winapi)]
        public partial string GetKeyboardStateS(ref int numkeys);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 101, Column 36 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetModState")]
        public partial Keymod GetModState();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 118, Column 30 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_SetModState", Convention = CallingConvention.Winapi)]
        public partial void SetModState(Keymod modstate);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 132, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyFromScancode", Convention = CallingConvention.Winapi)]
        public partial int GetKeyFromScancode(Scancode scancode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 146, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetScancodeFromKey", Convention = CallingConvention.Winapi)]
        public partial Scancode GetScancodeFromKey(int key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 171, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetScancodeName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetScancodeName(Scancode scancode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 171, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetScancodeName", Convention = CallingConvention.Winapi)]
        public partial string GetScancodeNameS(Scancode scancode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 186, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetScancodeFromName", Convention = CallingConvention.Winapi)]
        public unsafe partial Scancode GetScancodeFromName(byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 186, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetScancodeFromName", Convention = CallingConvention.Winapi)]
        public partial Scancode GetScancodeFromName(ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 186, Column 38 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetScancodeFromName", Convention = CallingConvention.Winapi)]
        public partial Scancode GetScancodeFromName([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetKeyName(int key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetKeyName", Convention = CallingConvention.Winapi)]
        public partial string GetKeyNameS(int key);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 216, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyFromName", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetKeyFromName(byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 216, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyFromName", Convention = CallingConvention.Winapi)]
        public partial int GetKeyFromName(ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 216, Column 37 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_GetKeyFromName", Convention = CallingConvention.Winapi)]
        public partial int GetKeyFromName([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 231, Column 30 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_StartTextInput")]
        public partial void StartTextInput();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 242, Column 34 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_IsTextInputActive")]
        public partial SdlBool IsTextInputActive();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 249, Column 30 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_StopTextInput")]
        public partial void StopTextInput();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 259, Column 30 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_SetTextInputRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetTextInputRect(Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 259, Column 30 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_SetTextInputRect", Convention = CallingConvention.Winapi)]
        public partial void SetTextInputRect(ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 272, Column 34 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_HasScreenKeyboardSupport")]
        public partial SdlBool HasScreenKeyboardSupport();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 284, Column 34 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_IsScreenKeyboardShown", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IsScreenKeyboardShown(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 284, Column 34 in build/submodules/SDL/include/SDL_keyboard.h")]
        [NativeApi(EntryPoint = "SDL_IsScreenKeyboardShown", Convention = CallingConvention.Winapi)]
        public partial SdlBool IsScreenKeyboardShown(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 38 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetMouseFocus")]
        public unsafe partial Window* GetMouseFocus();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 100, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetMouseState(int* x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 100, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetMouseState(int* x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 100, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetMouseState(ref int x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 100, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetMouseState", Convention = CallingConvention.Winapi)]
        public partial uint GetMouseState(ref int x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetGlobalMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetGlobalMouseState(int* x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetGlobalMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetGlobalMouseState(int* x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetGlobalMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetGlobalMouseState(ref int x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 129, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetGlobalMouseState", Convention = CallingConvention.Winapi)]
        public partial uint GetGlobalMouseState(ref int x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 146, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetRelativeMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetRelativeMouseState(int* x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 146, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetRelativeMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetRelativeMouseState(int* x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 146, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetRelativeMouseState", Convention = CallingConvention.Winapi)]
        public unsafe partial uint GetRelativeMouseState(ref int x, int* y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 146, Column 32 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetRelativeMouseState", Convention = CallingConvention.Winapi)]
        public partial uint GetRelativeMouseState(ref int x, ref int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 30 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_WarpMouseInWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial void WarpMouseInWindow(Window* window, int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 30 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_WarpMouseInWindow", Convention = CallingConvention.Winapi)]
        public partial void WarpMouseInWindow(ref Window window, int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_WarpMouseGlobal", Convention = CallingConvention.Winapi)]
        public partial int WarpMouseGlobal(int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 199, Column 29 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_SetRelativeMouseMode", Convention = CallingConvention.Winapi)]
        public partial int SetRelativeMouseMode(SdlBool enabled);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 236, Column 29 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CaptureMouse", Convention = CallingConvention.Winapi)]
        public partial int CaptureMouse(SdlBool enabled);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 245, Column 34 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetRelativeMouseMode")]
        public partial SdlBool GetRelativeMouseMode();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor(byte* data, byte* mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor(byte* data, ref byte mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor(byte* data, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor(ref byte data, byte* mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor(ref byte data, ref byte mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor(ref byte data, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string data, byte* mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string data, ref byte mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateCursor([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string data, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string mask, int w, int h, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 306, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateColorCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateColorCursor(Surface* surface, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 306, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateColorCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateColorCursor(ref Surface surface, int hot_x, int hot_y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 321, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_CreateSystemCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial Cursor* CreateSystemCursor(SystemCursor id);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 337, Column 30 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_SetCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetCursor(Cursor* cursor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 337, Column 30 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_SetCursor", Convention = CallingConvention.Winapi)]
        public partial void SetCursor(ref Cursor cursor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 349, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetCursor")]
        public unsafe partial Cursor* GetCursor();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 360, Column 37 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_GetDefaultCursor")]
        public unsafe partial Cursor* GetDefaultCursor();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 374, Column 30 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_FreeCursor", Convention = CallingConvention.Winapi)]
        public unsafe partial void FreeCursor(Cursor* cursor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 374, Column 30 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_FreeCursor", Convention = CallingConvention.Winapi)]
        public partial void FreeCursor(ref Cursor cursor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 394, Column 29 in build/submodules/SDL/include/SDL_mouse.h")]
        [NativeApi(EntryPoint = "SDL_ShowCursor", Convention = CallingConvention.Winapi)]
        public partial int ShowCursor(int toggle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 128, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_LockJoysticks")]
        public partial void LockJoysticks();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 141, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_UnlockJoysticks")]
        public partial void UnlockJoysticks();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 152, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_NumJoysticks")]
        public partial int NumJoysticks();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 167, Column 37 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNameForIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* JoystickNameForIndex(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 167, Column 37 in build/submodules/SDL/include\\SDL_joystick.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_JoystickNameForIndex", Convention = CallingConvention.Winapi)]
        public partial string JoystickNameForIndexS(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 173, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDevicePlayerIndex", Convention = CallingConvention.Winapi)]
        public partial int JoystickGetDevicePlayerIndex(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 189, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDeviceGUID", Convention = CallingConvention.Winapi)]
        public partial JoystickGUID JoystickGetDeviceGUID(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 202, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDeviceVendor", Convention = CallingConvention.Winapi)]
        public partial ushort JoystickGetDeviceVendor(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 215, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDeviceProduct", Convention = CallingConvention.Winapi)]
        public partial ushort JoystickGetDeviceProduct(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDeviceProductVersion", Convention = CallingConvention.Winapi)]
        public partial ushort JoystickGetDeviceProductVersion(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDeviceType", Convention = CallingConvention.Winapi)]
        public partial JoystickType JoystickGetDeviceType(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 253, Column 40 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetDeviceInstanceID", Convention = CallingConvention.Winapi)]
        public partial int JoystickGetDeviceInstanceID(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 273, Column 39 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickOpen", Convention = CallingConvention.Winapi)]
        public unsafe partial Joystick* JoystickOpen(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 284, Column 39 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickFromInstanceID", Convention = CallingConvention.Winapi)]
        public unsafe partial Joystick* JoystickFromInstanceID(int instance_id);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 293, Column 39 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickFromPlayerIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial Joystick* JoystickFromPlayerIndex(int player_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickAttachVirtual", Convention = CallingConvention.Winapi)]
        public partial int JoystickAttachVirtual(JoystickType type, int naxes, int nbuttons, int nhats);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 312, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickDetachVirtual", Convention = CallingConvention.Winapi)]
        public partial int JoystickDetachVirtual(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 320, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickIsVirtual", Convention = CallingConvention.Winapi)]
        public partial SdlBool JoystickIsVirtual(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 336, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetVirtualAxis", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickSetVirtualAxis(Joystick* joystick, int axis, short value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 336, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetVirtualAxis", Convention = CallingConvention.Winapi)]
        public partial int JoystickSetVirtualAxis(ref Joystick joystick, int axis, short value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 352, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetVirtualButton", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickSetVirtualButton(Joystick* joystick, int button, byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 352, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetVirtualButton", Convention = CallingConvention.Winapi)]
        public partial int JoystickSetVirtualButton(ref Joystick joystick, int button, byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 368, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetVirtualHat", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickSetVirtualHat(Joystick* joystick, int hat, byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 368, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetVirtualHat", Convention = CallingConvention.Winapi)]
        public partial int JoystickSetVirtualHat(ref Joystick joystick, int hat, byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 382, Column 37 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* JoystickName(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 382, Column 37 in build/submodules/SDL/include\\SDL_joystick.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_JoystickName", Convention = CallingConvention.Winapi)]
        public unsafe partial string JoystickNameS(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 382, Column 37 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* JoystickName(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 382, Column 37 in build/submodules/SDL/include\\SDL_joystick.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_JoystickName", Convention = CallingConvention.Winapi)]
        public partial string JoystickNameS(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 393, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetPlayerIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetPlayerIndex(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 393, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetPlayerIndex", Convention = CallingConvention.Winapi)]
        public partial int JoystickGetPlayerIndex(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 401, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetPlayerIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial void JoystickSetPlayerIndex(Joystick* joystick, int player_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 401, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetPlayerIndex", Convention = CallingConvention.Winapi)]
        public partial void JoystickSetPlayerIndex(ref Joystick joystick, int player_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 416, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUID", Convention = CallingConvention.Winapi)]
        public unsafe partial JoystickGUID JoystickGetGUID(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 416, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUID", Convention = CallingConvention.Winapi)]
        public partial JoystickGUID JoystickGetGUID(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 426, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetVendor", Convention = CallingConvention.Winapi)]
        public unsafe partial ushort JoystickGetVendor(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 426, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetVendor", Convention = CallingConvention.Winapi)]
        public partial ushort JoystickGetVendor(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetProduct", Convention = CallingConvention.Winapi)]
        public unsafe partial ushort JoystickGetProduct(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetProduct", Convention = CallingConvention.Winapi)]
        public partial ushort JoystickGetProduct(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 445, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetProductVersion", Convention = CallingConvention.Winapi)]
        public unsafe partial ushort JoystickGetProductVersion(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 445, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetProductVersion", Convention = CallingConvention.Winapi)]
        public partial ushort JoystickGetProductVersion(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 455, Column 38 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetSerial", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* JoystickGetSerial(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 455, Column 38 in build/submodules/SDL/include\\SDL_joystick.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_JoystickGetSerial", Convention = CallingConvention.Winapi)]
        public unsafe partial string JoystickGetSerialS(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 455, Column 38 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetSerial", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* JoystickGetSerial(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 455, Column 38 in build/submodules/SDL/include\\SDL_joystick.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_JoystickGetSerial", Convention = CallingConvention.Winapi)]
        public partial string JoystickGetSerialS(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 463, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetType", Convention = CallingConvention.Winapi)]
        public unsafe partial JoystickType JoystickGetType(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 463, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetType", Convention = CallingConvention.Winapi)]
        public partial JoystickType JoystickGetType(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUIDString", Convention = CallingConvention.Winapi)]
        public unsafe partial void JoystickGetGUIDString(JoystickGUID guid, byte* pszGUID, int cbGUID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUIDString", Convention = CallingConvention.Winapi)]
        public partial void JoystickGetGUIDString(JoystickGUID guid, ref byte pszGUID, int cbGUID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 478, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUIDString", Convention = CallingConvention.Winapi)]
        public partial void JoystickGetGUIDString(JoystickGUID guid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszGUID, int cbGUID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 492, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUIDFromString", Convention = CallingConvention.Winapi)]
        public unsafe partial JoystickGUID JoystickGetGUIDFromString(byte* pchGUID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 492, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUIDFromString", Convention = CallingConvention.Winapi)]
        public partial JoystickGUID JoystickGetGUIDFromString(ref byte pchGUID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 492, Column 42 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetGUIDFromString", Convention = CallingConvention.Winapi)]
        public partial JoystickGUID JoystickGetGUIDFromString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pchGUID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAttached", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool JoystickGetAttached(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 504, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAttached", Convention = CallingConvention.Winapi)]
        public partial SdlBool JoystickGetAttached(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 40 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickInstanceID", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickInstanceID(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 515, Column 40 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickInstanceID", Convention = CallingConvention.Winapi)]
        public partial int JoystickInstanceID(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumAxes", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickNumAxes(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 532, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumAxes", Convention = CallingConvention.Winapi)]
        public partial int JoystickNumAxes(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumBalls", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickNumBalls(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 548, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumBalls", Convention = CallingConvention.Winapi)]
        public partial int JoystickNumBalls(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 560, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumHats", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickNumHats(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 560, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumHats", Convention = CallingConvention.Winapi)]
        public partial int JoystickNumHats(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 572, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumButtons", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickNumButtons(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 572, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickNumButtons", Convention = CallingConvention.Winapi)]
        public partial int JoystickNumButtons(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 582, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickUpdate")]
        public partial void JoystickUpdate();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 605, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickEventState", Convention = CallingConvention.Winapi)]
        public partial int JoystickEventState(int state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 630, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAxis", Convention = CallingConvention.Winapi)]
        public unsafe partial short JoystickGetAxis(Joystick* joystick, int axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 630, Column 32 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAxis", Convention = CallingConvention.Winapi)]
        public partial short JoystickGetAxis(ref Joystick joystick, int axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 645, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAxisInitialState", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool JoystickGetAxisInitialState(Joystick* joystick, int axis, short* state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 645, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAxisInitialState", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool JoystickGetAxisInitialState(Joystick* joystick, int axis, ref short state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 645, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAxisInitialState", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool JoystickGetAxisInitialState(ref Joystick joystick, int axis, short* state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 645, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetAxisInitialState", Convention = CallingConvention.Winapi)]
        public partial SdlBool JoystickGetAxisInitialState(ref Joystick joystick, int axis, ref short state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 684, Column 31 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetHat", Convention = CallingConvention.Winapi)]
        public unsafe partial byte JoystickGetHat(Joystick* joystick, int hat);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 684, Column 31 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetHat", Convention = CallingConvention.Winapi)]
        public partial byte JoystickGetHat(ref Joystick joystick, int hat);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(Joystick* joystick, int ball, int* dx, int* dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(Joystick* joystick, int ball, int* dx, ref int dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(Joystick* joystick, int ball, ref int dx, int* dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(Joystick* joystick, int ball, ref int dx, ref int dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(ref Joystick joystick, int ball, int* dx, int* dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(ref Joystick joystick, int ball, int* dx, ref int dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickGetBall(ref Joystick joystick, int ball, ref int dx, int* dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetBall", Convention = CallingConvention.Winapi)]
        public partial int JoystickGetBall(ref Joystick joystick, int ball, ref int dx, ref int dy);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 718, Column 31 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetButton", Convention = CallingConvention.Winapi)]
        public unsafe partial byte JoystickGetButton(Joystick* joystick, int button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 718, Column 31 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickGetButton", Convention = CallingConvention.Winapi)]
        public partial byte JoystickGetButton(ref Joystick joystick, int button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 736, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickRumble", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickRumble(Joystick* joystick, ushort low_frequency_rumble, ushort high_frequency_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 736, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickRumble", Convention = CallingConvention.Winapi)]
        public partial int JoystickRumble(ref Joystick joystick, ushort low_frequency_rumble, ushort high_frequency_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickRumbleTriggers", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickRumbleTriggers(Joystick* joystick, ushort left_rumble, ushort right_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 757, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickRumbleTriggers", Convention = CallingConvention.Winapi)]
        public partial int JoystickRumbleTriggers(ref Joystick joystick, ushort left_rumble, ushort right_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 768, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickHasLED", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool JoystickHasLED(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 768, Column 34 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickHasLED", Convention = CallingConvention.Winapi)]
        public partial SdlBool JoystickHasLED(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 783, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetLED", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickSetLED(Joystick* joystick, byte red, byte green, byte blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 783, Column 29 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickSetLED", Convention = CallingConvention.Winapi)]
        public partial int JoystickSetLED(ref Joystick joystick, byte red, byte green, byte blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickClose", Convention = CallingConvention.Winapi)]
        public unsafe partial void JoystickClose(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 792, Column 30 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickClose", Convention = CallingConvention.Winapi)]
        public partial void JoystickClose(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 803, Column 48 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickCurrentPowerLevel", Convention = CallingConvention.Winapi)]
        public unsafe partial JoystickPowerLevel JoystickCurrentPowerLevel(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 803, Column 48 in build/submodules/SDL/include\\SDL_joystick.h")]
        [NativeApi(EntryPoint = "SDL_JoystickCurrentPowerLevel", Convention = CallingConvention.Winapi)]
        public partial JoystickPowerLevel JoystickCurrentPowerLevel(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 137, Column 30 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_LockSensors")]
        public partial void LockSensors();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 138, Column 30 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_UnlockSensors")]
        public partial void UnlockSensors();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 145, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_NumSensors")]
        public partial int NumSensors();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetDeviceName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* SensorGetDeviceName(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_SensorGetDeviceName", Convention = CallingConvention.Winapi)]
        public partial string SensorGetDeviceNameS(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 162, Column 40 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetDeviceType", Convention = CallingConvention.Winapi)]
        public partial SensorType SensorGetDeviceType(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 171, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetDeviceNonPortableType", Convention = CallingConvention.Winapi)]
        public partial int SensorGetDeviceNonPortableType(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 179, Column 38 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetDeviceInstanceID", Convention = CallingConvention.Winapi)]
        public partial int SensorGetDeviceInstanceID(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 187, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorOpen", Convention = CallingConvention.Winapi)]
        public unsafe partial Sensor* SensorOpen(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 195, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorFromInstanceID", Convention = CallingConvention.Winapi)]
        public unsafe partial Sensor* SensorFromInstanceID(int instance_id);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* SensorGetName(Sensor* sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_SensorGetName", Convention = CallingConvention.Winapi)]
        public unsafe partial string SensorGetNameS(Sensor* sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* SensorGetName(ref Sensor sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 37 in build/submodules/SDL/include\\SDL_sensor.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_SensorGetName", Convention = CallingConvention.Winapi)]
        public partial string SensorGetNameS(ref Sensor sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 212, Column 40 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetType", Convention = CallingConvention.Winapi)]
        public unsafe partial SensorType SensorGetType(Sensor* sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 212, Column 40 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetType", Convention = CallingConvention.Winapi)]
        public partial SensorType SensorGetType(ref Sensor sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 220, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetNonPortableType", Convention = CallingConvention.Winapi)]
        public unsafe partial int SensorGetNonPortableType(Sensor* sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 220, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetNonPortableType", Convention = CallingConvention.Winapi)]
        public partial int SensorGetNonPortableType(ref Sensor sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 38 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetInstanceID", Convention = CallingConvention.Winapi)]
        public unsafe partial int SensorGetInstanceID(Sensor* sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 38 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetInstanceID", Convention = CallingConvention.Winapi)]
        public partial int SensorGetInstanceID(ref Sensor sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetData", Convention = CallingConvention.Winapi)]
        public unsafe partial int SensorGetData(Sensor* sensor, float* data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetData", Convention = CallingConvention.Winapi)]
        public unsafe partial int SensorGetData(Sensor* sensor, ref float data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetData", Convention = CallingConvention.Winapi)]
        public unsafe partial int SensorGetData(ref Sensor sensor, float* data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 29 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorGetData", Convention = CallingConvention.Winapi)]
        public partial int SensorGetData(ref Sensor sensor, ref float data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 247, Column 30 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorClose", Convention = CallingConvention.Winapi)]
        public unsafe partial void SensorClose(Sensor* sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 247, Column 30 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorClose", Convention = CallingConvention.Winapi)]
        public partial void SensorClose(ref Sensor sensor);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 258, Column 30 in build/submodules/SDL/include\\SDL_sensor.h")]
        [NativeApi(EntryPoint = "SDL_SensorUpdate")]
        public partial void SensorUpdate();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 154, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerAddMappingsFromRW", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerAddMappingsFromRW(RWops* rw, int freerw);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 154, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerAddMappingsFromRW", Convention = CallingConvention.Winapi)]
        public partial int GameControllerAddMappingsFromRW(ref RWops rw, int freerw);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 188, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerAddMapping", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerAddMapping(byte* mappingString);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 188, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerAddMapping", Convention = CallingConvention.Winapi)]
        public partial int GameControllerAddMapping(ref byte mappingString);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 188, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerAddMapping", Convention = CallingConvention.Winapi)]
        public partial int GameControllerAddMapping([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string mappingString);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 195, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerNumMappings")]
        public partial int GameControllerNumMappings();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerMappingForIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerMappingForIndex(int mapping_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 203, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerMappingForIndex", Convention = CallingConvention.Winapi)]
        public partial string GameControllerMappingForIndexS(int mapping_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 217, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerMappingForGUID", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerMappingForGUID(JoystickGUID guid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 217, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerMappingForGUID", Convention = CallingConvention.Winapi)]
        public partial string GameControllerMappingForGUIDS(JoystickGUID guid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 236, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerMapping", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerMapping(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 236, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerMapping", Convention = CallingConvention.Winapi)]
        public unsafe partial string GameControllerMappingS(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 236, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerMapping", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerMapping(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 236, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerMapping", Convention = CallingConvention.Winapi)]
        public partial string GameControllerMappingS(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 254, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_IsGameController", Convention = CallingConvention.Winapi)]
        public partial SdlBool IsGameController(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerNameForIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerNameForIndex(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerNameForIndex", Convention = CallingConvention.Winapi)]
        public partial string GameControllerNameForIndexS(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 287, Column 48 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerTypeForIndex", Convention = CallingConvention.Winapi)]
        public partial GameControllerType GameControllerTypeForIndex(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 299, Column 31 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerMappingForDeviceIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerMappingForDeviceIndex(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 299, Column 31 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerMappingForDeviceIndex", Convention = CallingConvention.Winapi)]
        public partial string GameControllerMappingForDeviceIndexS(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 323, Column 45 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerOpen", Convention = CallingConvention.Winapi)]
        public unsafe partial GameController* GameControllerOpen(int joystick_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 334, Column 45 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerFromInstanceID", Convention = CallingConvention.Winapi)]
        public unsafe partial GameController* GameControllerFromInstanceID(int joyid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 349, Column 45 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerFromPlayerIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial GameController* GameControllerFromPlayerIndex(int player_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 367, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerName(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 367, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerName", Convention = CallingConvention.Winapi)]
        public unsafe partial string GameControllerNameS(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 367, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerName(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 367, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerName", Convention = CallingConvention.Winapi)]
        public partial string GameControllerNameS(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 378, Column 48 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetType", Convention = CallingConvention.Winapi)]
        public unsafe partial GameControllerType GameControllerGetType(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 378, Column 48 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetType", Convention = CallingConvention.Winapi)]
        public partial GameControllerType GameControllerGetType(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 388, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetPlayerIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetPlayerIndex(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 388, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetPlayerIndex", Convention = CallingConvention.Winapi)]
        public partial int GameControllerGetPlayerIndex(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 30 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerSetPlayerIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial void GameControllerSetPlayerIndex(GameController* gamecontroller, int player_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 30 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerSetPlayerIndex", Convention = CallingConvention.Winapi)]
        public partial void GameControllerSetPlayerIndex(ref GameController gamecontroller, int player_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 406, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetVendor", Convention = CallingConvention.Winapi)]
        public unsafe partial ushort GameControllerGetVendor(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 406, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetVendor", Convention = CallingConvention.Winapi)]
        public partial ushort GameControllerGetVendor(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 416, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetProduct", Convention = CallingConvention.Winapi)]
        public unsafe partial ushort GameControllerGetProduct(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 416, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetProduct", Convention = CallingConvention.Winapi)]
        public partial ushort GameControllerGetProduct(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 426, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetProductVersion", Convention = CallingConvention.Winapi)]
        public unsafe partial ushort GameControllerGetProductVersion(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 426, Column 32 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetProductVersion", Convention = CallingConvention.Winapi)]
        public partial ushort GameControllerGetProductVersion(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 38 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSerial", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerGetSerial(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 38 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSerial", Convention = CallingConvention.Winapi)]
        public unsafe partial string GameControllerGetSerialS(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 38 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSerial", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerGetSerial(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 436, Column 38 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSerial", Convention = CallingConvention.Winapi)]
        public partial string GameControllerGetSerialS(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAttached", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GameControllerGetAttached(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 449, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAttached", Convention = CallingConvention.Winapi)]
        public partial SdlBool GameControllerGetAttached(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 468, Column 39 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetJoystick", Convention = CallingConvention.Winapi)]
        public unsafe partial Joystick* GameControllerGetJoystick(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 468, Column 39 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetJoystick", Convention = CallingConvention.Winapi)]
        public unsafe partial Joystick* GameControllerGetJoystick(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 488, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerEventState", Convention = CallingConvention.Winapi)]
        public partial int GameControllerEventState(int state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 497, Column 30 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerUpdate")]
        public partial void GameControllerUpdate();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 535, Column 48 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAxisFromString", Convention = CallingConvention.Winapi)]
        public unsafe partial GameControllerAxis GameControllerGetAxisFromString(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 535, Column 48 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAxisFromString", Convention = CallingConvention.Winapi)]
        public partial GameControllerAxis GameControllerGetAxisFromString(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 535, Column 48 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAxisFromString", Convention = CallingConvention.Winapi)]
        public partial GameControllerAxis GameControllerGetAxisFromString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetStringForAxis", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerGetStringForAxis(GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 549, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerGetStringForAxis", Convention = CallingConvention.Winapi)]
        public partial string GameControllerGetStringForAxisS(GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetBindForAxis", Convention = CallingConvention.Winapi)]
        public unsafe partial GameControllerButtonBind GameControllerGetBindForAxis(GameController* gamecontroller, GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetBindForAxis", Convention = CallingConvention.Winapi)]
        public partial GameControllerButtonBind GameControllerGetBindForAxis(ref GameController gamecontroller, GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 579, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasAxis", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GameControllerHasAxis(GameController* gamecontroller, GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 579, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasAxis", Convention = CallingConvention.Winapi)]
        public partial SdlBool GameControllerHasAxis(ref GameController gamecontroller, GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAxis", Convention = CallingConvention.Winapi)]
        public unsafe partial short GameControllerGetAxis(GameController* gamecontroller, GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 599, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetAxis", Convention = CallingConvention.Winapi)]
        public partial short GameControllerGetAxis(ref GameController gamecontroller, GameControllerAxis axis);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 644, Column 50 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetButtonFromString", Convention = CallingConvention.Winapi)]
        public unsafe partial GameControllerButton GameControllerGetButtonFromString(byte* str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 644, Column 50 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetButtonFromString", Convention = CallingConvention.Winapi)]
        public partial GameControllerButton GameControllerGetButtonFromString(ref byte str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 644, Column 50 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetButtonFromString", Convention = CallingConvention.Winapi)]
        public partial GameControllerButton GameControllerGetButtonFromString([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 660, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetStringForButton", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GameControllerGetStringForButton(GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 660, Column 37 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GameControllerGetStringForButton", Convention = CallingConvention.Winapi)]
        public partial string GameControllerGetStringForButtonS(GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 676, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetBindForButton", Convention = CallingConvention.Winapi)]
        public unsafe partial GameControllerButtonBind GameControllerGetBindForButton(GameController* gamecontroller, GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 676, Column 1 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetBindForButton", Convention = CallingConvention.Winapi)]
        public partial GameControllerButtonBind GameControllerGetBindForButton(ref GameController gamecontroller, GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 689, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasButton", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GameControllerHasButton(GameController* gamecontroller, GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 689, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasButton", Convention = CallingConvention.Winapi)]
        public partial SdlBool GameControllerHasButton(ref GameController gamecontroller, GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 704, Column 31 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetButton", Convention = CallingConvention.Winapi)]
        public unsafe partial byte GameControllerGetButton(GameController* gamecontroller, GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 704, Column 31 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetButton", Convention = CallingConvention.Winapi)]
        public partial byte GameControllerGetButton(ref GameController gamecontroller, GameControllerButton button);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 710, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetNumTouchpads", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetNumTouchpads(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 710, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetNumTouchpads", Convention = CallingConvention.Winapi)]
        public partial int GameControllerGetNumTouchpads(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 715, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetNumTouchpadFingers", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetNumTouchpadFingers(GameController* gamecontroller, int touchpad);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 715, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetNumTouchpadFingers", Convention = CallingConvention.Winapi)]
        public partial int GameControllerGetNumTouchpadFingers(ref GameController gamecontroller, int touchpad);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, float* x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, float* x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, float* x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, float* x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, ref float x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, ref float x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, ref float x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, byte* state, ref float x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, float* x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, float* x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, float* x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, float* x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, ref float x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, ref float x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, ref float x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, ref byte state, ref float x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(GameController* gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, float* x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, float* x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, float* x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, float* x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, ref float x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, ref float x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, ref float x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, byte* state, ref float x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, float* x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, float* x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, float* x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, float* x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, ref float x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, ref float x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, ref float x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, ref byte state, ref float x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, float* x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, float* y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, float* y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, ref float y, float* pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 720, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetTouchpadFinger", Convention = CallingConvention.Winapi)]
        public partial int GameControllerGetTouchpadFinger(ref GameController gamecontroller, int touchpad, int finger, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string state, ref float x, ref float y, ref float pressure);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 730, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasSensor", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GameControllerHasSensor(GameController* gamecontroller, SensorType type);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 730, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasSensor", Convention = CallingConvention.Winapi)]
        public partial SdlBool GameControllerHasSensor(ref GameController gamecontroller, SensorType type);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 741, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerSetSensorEnabled", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerSetSensorEnabled(GameController* gamecontroller, SensorType type, SdlBool enabled);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 741, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerSetSensorEnabled", Convention = CallingConvention.Winapi)]
        public partial int GameControllerSetSensorEnabled(ref GameController gamecontroller, SensorType type, SdlBool enabled);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 751, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerIsSensorEnabled", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GameControllerIsSensorEnabled(GameController* gamecontroller, SensorType type);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 751, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerIsSensorEnabled", Convention = CallingConvention.Winapi)]
        public partial SdlBool GameControllerIsSensorEnabled(ref GameController gamecontroller, SensorType type);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 765, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSensorData", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetSensorData(GameController* gamecontroller, SensorType type, float* data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 765, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSensorData", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetSensorData(GameController* gamecontroller, SensorType type, ref float data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 765, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSensorData", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerGetSensorData(ref GameController gamecontroller, SensorType type, float* data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 765, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerGetSensorData", Convention = CallingConvention.Winapi)]
        public partial int GameControllerGetSensorData(ref GameController gamecontroller, SensorType type, ref float data, int num_values);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 781, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerRumble", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerRumble(GameController* gamecontroller, ushort low_frequency_rumble, ushort high_frequency_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 781, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerRumble", Convention = CallingConvention.Winapi)]
        public partial int GameControllerRumble(ref GameController gamecontroller, ushort low_frequency_rumble, ushort high_frequency_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 801, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerRumbleTriggers", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerRumbleTriggers(GameController* gamecontroller, ushort left_rumble, ushort right_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 801, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerRumbleTriggers", Convention = CallingConvention.Winapi)]
        public partial int GameControllerRumbleTriggers(ref GameController gamecontroller, ushort left_rumble, ushort right_rumble, uint duration_ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 810, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasLED", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GameControllerHasLED(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 810, Column 34 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerHasLED", Convention = CallingConvention.Winapi)]
        public partial SdlBool GameControllerHasLED(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerSetLED", Convention = CallingConvention.Winapi)]
        public unsafe partial int GameControllerSetLED(GameController* gamecontroller, byte red, byte green, byte blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 821, Column 29 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerSetLED", Convention = CallingConvention.Winapi)]
        public partial int GameControllerSetLED(ref GameController gamecontroller, byte red, byte green, byte blue);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 831, Column 30 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerClose", Convention = CallingConvention.Winapi)]
        public unsafe partial void GameControllerClose(GameController* gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 831, Column 30 in build/submodules/SDL/include\\SDL_gamecontroller.h")]
        [NativeApi(EntryPoint = "SDL_GameControllerClose", Convention = CallingConvention.Winapi)]
        public partial void GameControllerClose(ref GameController gamecontroller);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 83, Column 29 in build/submodules/SDL/include/SDL_touch.h")]
        [NativeApi(EntryPoint = "SDL_GetNumTouchDevices")]
        public partial int GetNumTouchDevices();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 96, Column 37 in build/submodules/SDL/include/SDL_touch.h")]
        [NativeApi(EntryPoint = "SDL_GetTouchDevice", Convention = CallingConvention.Winapi)]
        public partial long GetTouchDevice(int index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 101, Column 45 in build/submodules/SDL/include/SDL_touch.h")]
        [NativeApi(EntryPoint = "SDL_GetTouchDeviceType", Convention = CallingConvention.Winapi)]
        public partial TouchDeviceType GetTouchDeviceType(long touchID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 114, Column 29 in build/submodules/SDL/include/SDL_touch.h")]
        [NativeApi(EntryPoint = "SDL_GetNumTouchFingers", Convention = CallingConvention.Winapi)]
        public partial int GetNumTouchFingers(long touchID);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 128, Column 38 in build/submodules/SDL/include/SDL_touch.h")]
        [NativeApi(EntryPoint = "SDL_GetTouchFinger", Convention = CallingConvention.Winapi)]
        public unsafe partial Finger* GetTouchFinger(long touchID, int index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 61, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_RecordGesture", Convention = CallingConvention.Winapi)]
        public partial int RecordGesture(long touchId);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_SaveAllDollarTemplates", Convention = CallingConvention.Winapi)]
        public unsafe partial int SaveAllDollarTemplates(RWops* dst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_SaveAllDollarTemplates", Convention = CallingConvention.Winapi)]
        public partial int SaveAllDollarTemplates(ref RWops dst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 91, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_SaveDollarTemplate", Convention = CallingConvention.Winapi)]
        public unsafe partial int SaveDollarTemplate(long gestureId, RWops* dst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 91, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_SaveDollarTemplate", Convention = CallingConvention.Winapi)]
        public partial int SaveDollarTemplate(long gestureId, ref RWops dst);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 107, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_LoadDollarTemplates", Convention = CallingConvention.Winapi)]
        public unsafe partial int LoadDollarTemplates(long touchId, RWops* src);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 107, Column 29 in build/submodules/SDL/include/SDL_gesture.h")]
        [NativeApi(EntryPoint = "SDL_LoadDollarTemplates", Convention = CallingConvention.Winapi)]
        public partial int LoadDollarTemplates(long touchId, ref RWops src);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 659, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PumpEvents")]
        public partial void PumpEvents();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PeepEvents", Convention = CallingConvention.Winapi)]
        public unsafe partial int PeepEvents(Event* events, int numevents, Eventaction action, uint minType, uint maxType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 705, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PeepEvents", Convention = CallingConvention.Winapi)]
        public partial int PeepEvents(ref Event events, int numevents, Eventaction action, uint minType, uint maxType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 722, Column 34 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_HasEvent", Convention = CallingConvention.Winapi)]
        public partial SdlBool HasEvent(uint type);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 739, Column 34 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_HasEvents", Convention = CallingConvention.Winapi)]
        public partial SdlBool HasEvents(uint minType, uint maxType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 759, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_FlushEvent", Convention = CallingConvention.Winapi)]
        public partial void FlushEvent(uint type);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 782, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_FlushEvents", Convention = CallingConvention.Winapi)]
        public partial void FlushEvents(uint minType, uint maxType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 827, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PollEvent", Convention = CallingConvention.Winapi)]
        public unsafe partial int PollEvent(Event* @event);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 827, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PollEvent", Convention = CallingConvention.Winapi)]
        public partial int PollEvent(ref Event @event);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 847, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_WaitEvent", Convention = CallingConvention.Winapi)]
        public unsafe partial int WaitEvent(Event* @event);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 847, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_WaitEvent", Convention = CallingConvention.Winapi)]
        public partial int WaitEvent(ref Event @event);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 871, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_WaitEventTimeout", Convention = CallingConvention.Winapi)]
        public unsafe partial int WaitEventTimeout(Event* @event, int timeout);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 871, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_WaitEventTimeout", Convention = CallingConvention.Winapi)]
        public partial int WaitEventTimeout(ref Event @event, int timeout);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 904, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PushEvent", Convention = CallingConvention.Winapi)]
        public unsafe partial int PushEvent(Event* @event);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 904, Column 29 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_PushEvent", Convention = CallingConvention.Winapi)]
        public partial int PushEvent(ref Event @event);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 961, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_SetEventFilter", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetEventFilter(PfnEventFilter filter, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 961, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_SetEventFilter", Convention = CallingConvention.Winapi)]
        public partial void SetEventFilter<T0>(PfnEventFilter filter, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 977, Column 34 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_GetEventFilter", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetEventFilter(PfnEventFilter* filter, void** userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 977, Column 34 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_GetEventFilter", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetEventFilter(PfnEventFilter* filter, ref void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 977, Column 34 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_GetEventFilter", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetEventFilter(ref PfnEventFilter filter, void** userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 977, Column 34 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_GetEventFilter", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetEventFilter(ref PfnEventFilter filter, ref void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1004, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_AddEventWatch", Convention = CallingConvention.Winapi)]
        public unsafe partial void AddEventWatch(PfnEventFilter filter, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1004, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_AddEventWatch", Convention = CallingConvention.Winapi)]
        public partial void AddEventWatch<T0>(PfnEventFilter filter, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1019, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_DelEventWatch", Convention = CallingConvention.Winapi)]
        public unsafe partial void DelEventWatch(PfnEventFilter filter, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1019, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_DelEventWatch", Convention = CallingConvention.Winapi)]
        public partial void DelEventWatch<T0>(PfnEventFilter filter, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1036, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_FilterEvents", Convention = CallingConvention.Winapi)]
        public unsafe partial void FilterEvents(PfnEventFilter filter, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1036, Column 30 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_FilterEvents", Convention = CallingConvention.Winapi)]
        public partial void FilterEvents<T0>(PfnEventFilter filter, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1062, Column 31 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_EventState", Convention = CallingConvention.Winapi)]
        public partial byte EventState(uint type, int state);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1084, Column 32 in build/submodules/SDL/include\\SDL_events.h")]
        [NativeApi(EntryPoint = "SDL_RegisterEvents", Convention = CallingConvention.Winapi)]
        public partial uint RegisterEvents(int numevents);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 78, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetBasePath")]
        public unsafe partial byte* GetBasePath();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 78, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetBasePath", Convention = CallingConvention.Winapi)]
        public partial string GetBasePathS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath(byte* org, byte* app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetPrefPathS(byte* org, byte* app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath(byte* org, ref byte app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetPrefPathS(byte* org, ref byte app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath(byte* org, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetPrefPathS(byte* org, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath(ref byte org, byte* app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetPrefPathS(ref byte org, byte* app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath(ref byte org, ref byte app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public partial string GetPrefPathS(ref byte org, ref byte app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath(ref byte org, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public partial string GetPrefPathS(ref byte org, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string org, byte* app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetPrefPathS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string org, byte* app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string org, ref byte app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public partial string GetPrefPathS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string org, ref byte app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetPrefPath([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string org, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 31 in build/submodules/SDL/include\\SDL_filesystem.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetPrefPath", Convention = CallingConvention.Winapi)]
        public partial string GetPrefPathS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string org, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string app);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 833, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_NumHaptics")]
        public partial int NumHaptics();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 849, Column 37 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticName", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* HapticName(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 849, Column 37 in build/submodules/SDL/include\\SDL_haptic.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_HapticName", Convention = CallingConvention.Winapi)]
        public partial string HapticNameS(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 876, Column 37 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticOpen", Convention = CallingConvention.Winapi)]
        public unsafe partial Haptic* HapticOpen(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 890, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticOpened", Convention = CallingConvention.Winapi)]
        public partial int HapticOpened(int device_index);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 904, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticIndex", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticIndex(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 904, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticIndex", Convention = CallingConvention.Winapi)]
        public partial int HapticIndex(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 915, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_MouseIsHaptic")]
        public partial int MouseIsHaptic();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 928, Column 37 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticOpenFromMouse")]
        public unsafe partial Haptic* HapticOpenFromMouse();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 942, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_JoystickIsHaptic", Convention = CallingConvention.Winapi)]
        public unsafe partial int JoystickIsHaptic(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 942, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_JoystickIsHaptic", Convention = CallingConvention.Winapi)]
        public partial int JoystickIsHaptic(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 965, Column 37 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticOpenFromJoystick", Convention = CallingConvention.Winapi)]
        public unsafe partial Haptic* HapticOpenFromJoystick(Joystick* joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 965, Column 37 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticOpenFromJoystick", Convention = CallingConvention.Winapi)]
        public unsafe partial Haptic* HapticOpenFromJoystick(ref Joystick joystick);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 975, Column 30 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticClose", Convention = CallingConvention.Winapi)]
        public unsafe partial void HapticClose(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 975, Column 30 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticClose", Convention = CallingConvention.Winapi)]
        public partial void HapticClose(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 993, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNumEffects", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticNumEffects(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 993, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNumEffects", Convention = CallingConvention.Winapi)]
        public partial int HapticNumEffects(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1011, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNumEffectsPlaying", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticNumEffectsPlaying(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1011, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNumEffectsPlaying", Convention = CallingConvention.Winapi)]
        public partial int HapticNumEffectsPlaying(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1025, Column 38 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticQuery", Convention = CallingConvention.Winapi)]
        public unsafe partial uint HapticQuery(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1025, Column 38 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticQuery", Convention = CallingConvention.Winapi)]
        public partial uint HapticQuery(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1038, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNumAxes", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticNumAxes(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1038, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNumAxes", Convention = CallingConvention.Winapi)]
        public partial int HapticNumAxes(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1055, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticEffectSupported", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticEffectSupported(Haptic* haptic, HapticEffect* effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1055, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticEffectSupported", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticEffectSupported(Haptic* haptic, ref HapticEffect effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1055, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticEffectSupported", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticEffectSupported(ref Haptic haptic, HapticEffect* effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1055, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticEffectSupported", Convention = CallingConvention.Winapi)]
        public partial int HapticEffectSupported(ref Haptic haptic, ref HapticEffect effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1072, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNewEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticNewEffect(Haptic* haptic, HapticEffect* effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1072, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNewEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticNewEffect(Haptic* haptic, ref HapticEffect effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1072, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNewEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticNewEffect(ref Haptic haptic, HapticEffect* effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1072, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticNewEffect", Convention = CallingConvention.Winapi)]
        public partial int HapticNewEffect(ref Haptic haptic, ref HapticEffect effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1096, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticUpdateEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticUpdateEffect(Haptic* haptic, int effect, HapticEffect* data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1096, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticUpdateEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticUpdateEffect(Haptic* haptic, int effect, ref HapticEffect data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1096, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticUpdateEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticUpdateEffect(ref Haptic haptic, int effect, HapticEffect* data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1096, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticUpdateEffect", Convention = CallingConvention.Winapi)]
        public partial int HapticUpdateEffect(ref Haptic haptic, int effect, ref HapticEffect data);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1122, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRunEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticRunEffect(Haptic* haptic, int effect, uint iterations);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1122, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRunEffect", Convention = CallingConvention.Winapi)]
        public partial int HapticRunEffect(ref Haptic haptic, int effect, uint iterations);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticStopEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticStopEffect(Haptic* haptic, int effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticStopEffect", Convention = CallingConvention.Winapi)]
        public partial int HapticStopEffect(ref Haptic haptic, int effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 30 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticDestroyEffect", Convention = CallingConvention.Winapi)]
        public unsafe partial void HapticDestroyEffect(Haptic* haptic, int effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 30 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticDestroyEffect", Convention = CallingConvention.Winapi)]
        public partial void HapticDestroyEffect(ref Haptic haptic, int effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1174, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticGetEffectStatus", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticGetEffectStatus(Haptic* haptic, int effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1174, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticGetEffectStatus", Convention = CallingConvention.Winapi)]
        public partial int HapticGetEffectStatus(ref Haptic haptic, int effect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1196, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticSetGain", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticSetGain(Haptic* haptic, int gain);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1196, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticSetGain", Convention = CallingConvention.Winapi)]
        public partial int HapticSetGain(ref Haptic haptic, int gain);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1213, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticSetAutocenter", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticSetAutocenter(Haptic* haptic, int autocenter);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1213, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticSetAutocenter", Convention = CallingConvention.Winapi)]
        public partial int HapticSetAutocenter(ref Haptic haptic, int autocenter);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1231, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticPause", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticPause(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1231, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticPause", Convention = CallingConvention.Winapi)]
        public partial int HapticPause(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1244, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticUnpause", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticUnpause(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1244, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticUnpause", Convention = CallingConvention.Winapi)]
        public partial int HapticUnpause(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1253, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticStopAll", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticStopAll(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1253, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticStopAll", Convention = CallingConvention.Winapi)]
        public partial int HapticStopAll(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1267, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumbleSupported", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticRumbleSupported(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1267, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumbleSupported", Convention = CallingConvention.Winapi)]
        public partial int HapticRumbleSupported(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1283, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumbleInit", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticRumbleInit(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1283, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumbleInit", Convention = CallingConvention.Winapi)]
        public partial int HapticRumbleInit(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1298, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumblePlay", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticRumblePlay(Haptic* haptic, float strength, uint length);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1298, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumblePlay", Convention = CallingConvention.Winapi)]
        public partial int HapticRumblePlay(ref Haptic haptic, float strength, uint length);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1311, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumbleStop", Convention = CallingConvention.Winapi)]
        public unsafe partial int HapticRumbleStop(Haptic* haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1311, Column 29 in build/submodules/SDL/include\\SDL_haptic.h")]
        [NativeApi(EntryPoint = "SDL_HapticRumbleStop", Convention = CallingConvention.Winapi)]
        public partial int HapticRumbleStop(ref Haptic haptic);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHintWithPriority(byte* name, byte* value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHintWithPriority(byte* name, ref byte value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHintWithPriority(byte* name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHintWithPriority(ref byte name, byte* value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHintWithPriority(ref byte name, ref byte value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHintWithPriority(ref byte name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHintWithPriority([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, byte* value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHintWithPriority([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, ref byte value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1689, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHintWithPriority", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHintWithPriority([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value, HintPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHint(byte* name, byte* value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHint(byte* name, ref byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHint(byte* name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHint(ref byte name, byte* value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHint(ref byte name, ref byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHint(ref byte name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool SetHint([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, byte* value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHint([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, ref byte value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1707, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_SetHint", Convention = CallingConvention.Winapi)]
        public partial SdlBool SetHint([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 38 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_GetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetHint(byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 38 in build/submodules/SDL/include\\SDL_hints.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial string GetHintS(byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 38 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_GetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetHint(ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 38 in build/submodules/SDL/include\\SDL_hints.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetHint", Convention = CallingConvention.Winapi)]
        public partial string GetHintS(ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 38 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_GetHint", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* GetHint([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 38 in build/submodules/SDL/include\\SDL_hints.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetHint", Convention = CallingConvention.Winapi)]
        public partial string GetHintS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1734, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_GetHintBoolean", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool GetHintBoolean(byte* name, SdlBool default_value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1734, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_GetHintBoolean", Convention = CallingConvention.Winapi)]
        public partial SdlBool GetHintBoolean(ref byte name, SdlBool default_value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1734, Column 34 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_GetHintBoolean", Convention = CallingConvention.Winapi)]
        public partial SdlBool GetHintBoolean([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, SdlBool default_value);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1758, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_AddHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void AddHintCallback(byte* name, PfnHintCallback callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1758, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_AddHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void AddHintCallback<T0>(byte* name, PfnHintCallback callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1758, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_AddHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void AddHintCallback(ref byte name, PfnHintCallback callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1758, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_AddHintCallback", Convention = CallingConvention.Winapi)]
        public partial void AddHintCallback<T0>(ref byte name, PfnHintCallback callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1758, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_AddHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void AddHintCallback([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, PfnHintCallback callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1758, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_AddHintCallback", Convention = CallingConvention.Winapi)]
        public partial void AddHintCallback<T0>([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, PfnHintCallback callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1774, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_DelHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void DelHintCallback(byte* name, PfnHintCallback callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1774, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_DelHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void DelHintCallback<T0>(byte* name, PfnHintCallback callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1774, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_DelHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void DelHintCallback(ref byte name, PfnHintCallback callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1774, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_DelHintCallback", Convention = CallingConvention.Winapi)]
        public partial void DelHintCallback<T0>(ref byte name, PfnHintCallback callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1774, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_DelHintCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial void DelHintCallback([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, PfnHintCallback callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1774, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_DelHintCallback", Convention = CallingConvention.Winapi)]
        public partial void DelHintCallback<T0>([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name, PfnHintCallback callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1783, Column 30 in build/submodules/SDL/include\\SDL_hints.h")]
        [NativeApi(EntryPoint = "SDL_ClearHints")]
        public partial void ClearHints();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 63, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadObject", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadObject(byte* sofile);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 63, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadObject", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadObject(ref byte sofile);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 63, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadObject", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadObject([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string sofile);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 88, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadFunction(void* handle, byte* name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 88, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadFunction(void* handle, ref byte name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 88, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadFunction(void* handle, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 88, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadFunction<T0>(ref T0 handle, byte* name) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 88, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadFunction<T0>(ref T0 handle, ref byte name) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 88, Column 31 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_LoadFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void* LoadFunction<T0>(ref T0 handle, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string name) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 99, Column 30 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_UnloadObject", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnloadObject(void* handle);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 99, Column 30 in build/submodules/SDL/include\\SDL_loadso.h")]
        [NativeApi(EntryPoint = "SDL_UnloadObject", Convention = CallingConvention.Winapi)]
        public partial void UnloadObject<T0>(ref T0 handle) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogSetAllPriority", Convention = CallingConvention.Winapi)]
        public partial void LogSetAllPriority(LogPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 132, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogSetPriority", Convention = CallingConvention.Winapi)]
        public partial void LogSetPriority(int category, LogPriority priority);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 143, Column 41 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogGetPriority", Convention = CallingConvention.Winapi)]
        public partial LogPriority LogGetPriority(int category);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 153, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogResetPriorities")]
        public partial void LogResetPriorities();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 171, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_Log", Convention = CallingConvention.Winapi)]
        public unsafe partial void Log(byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 171, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_Log", Convention = CallingConvention.Winapi)]
        public partial void Log(ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 171, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_Log", Convention = CallingConvention.Winapi)]
        public partial void Log([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 190, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogVerbose", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogVerbose(int category, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 190, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogVerbose", Convention = CallingConvention.Winapi)]
        public partial void LogVerbose(int category, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 190, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogVerbose", Convention = CallingConvention.Winapi)]
        public partial void LogVerbose(int category, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 209, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogDebug", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogDebug(int category, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 209, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogDebug", Convention = CallingConvention.Winapi)]
        public partial void LogDebug(int category, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 209, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogDebug", Convention = CallingConvention.Winapi)]
        public partial void LogDebug(int category, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogInfo(int category, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogInfo", Convention = CallingConvention.Winapi)]
        public partial void LogInfo(int category, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 228, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogInfo", Convention = CallingConvention.Winapi)]
        public partial void LogInfo(int category, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 247, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogWarn", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogWarn(int category, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 247, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogWarn", Convention = CallingConvention.Winapi)]
        public partial void LogWarn(int category, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 247, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogWarn", Convention = CallingConvention.Winapi)]
        public partial void LogWarn(int category, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 266, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogError", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogError(int category, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 266, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogError", Convention = CallingConvention.Winapi)]
        public partial void LogError(int category, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 266, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogError", Convention = CallingConvention.Winapi)]
        public partial void LogError(int category, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 285, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogCritical", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogCritical(int category, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 285, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogCritical", Convention = CallingConvention.Winapi)]
        public partial void LogCritical(int category, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 285, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogCritical", Convention = CallingConvention.Winapi)]
        public partial void LogCritical(int category, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 305, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessage", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogMessage(int category, LogPriority priority, byte* fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 305, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessage", Convention = CallingConvention.Winapi)]
        public partial void LogMessage(int category, LogPriority priority, ref byte fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 305, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessage", Convention = CallingConvention.Winapi)]
        public partial void LogMessage(int category, LogPriority priority, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogMessageV(int category, LogPriority priority, byte* fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogMessageV(int category, LogPriority priority, byte* fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogMessageV(int category, LogPriority priority, byte* fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogMessageV(int category, LogPriority priority, ref byte fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public partial void LogMessageV(int category, LogPriority priority, ref byte fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public partial void LogMessageV(int category, LogPriority priority, ref byte fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogMessageV(int category, LogPriority priority, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, byte* ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public partial void LogMessageV(int category, LogPriority priority, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, ref byte ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 328, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogMessageV", Convention = CallingConvention.Winapi)]
        public partial void LogMessageV(int category, LogPriority priority, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string fmt, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string ap);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 354, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogGetOutputFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogGetOutputFunction(PfnLogOutputFunction* callback, void** userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 354, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogGetOutputFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogGetOutputFunction(PfnLogOutputFunction* callback, ref void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 354, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogGetOutputFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogGetOutputFunction(ref PfnLogOutputFunction callback, void** userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 354, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogGetOutputFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogGetOutputFunction(ref PfnLogOutputFunction callback, ref void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 364, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogSetOutputFunction", Convention = CallingConvention.Winapi)]
        public unsafe partial void LogSetOutputFunction(PfnLogOutputFunction callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 364, Column 30 in build/submodules/SDL/include\\SDL_log.h")]
        [NativeApi(EntryPoint = "SDL_LogSetOutputFunction", Convention = CallingConvention.Winapi)]
        public partial void LogSetOutputFunction<T0>(PfnLogOutputFunction callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 140, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowMessageBox(MessageBoxData* messageboxdata, int* buttonid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 140, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowMessageBox(MessageBoxData* messageboxdata, ref int buttonid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 140, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowMessageBox(ref MessageBoxData messageboxdata, int* buttonid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 140, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowMessageBox", Convention = CallingConvention.Winapi)]
        public partial int ShowMessageBox(ref MessageBoxData messageboxdata, ref int buttonid);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, byte* title, byte* message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, byte* title, byte* message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, byte* title, ref byte message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, byte* title, ref byte message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, byte* title, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, byte* title, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, ref byte title, byte* message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, ref byte title, byte* message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, ref byte title, ref byte message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public partial int ShowSimpleMessageBox(uint flags, ref byte title, ref byte message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, ref byte title, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public partial int ShowSimpleMessageBox(uint flags, ref byte title, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, byte* message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, byte* message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, ref byte message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public partial int ShowSimpleMessageBox(uint flags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, ref byte message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public unsafe partial int ShowSimpleMessageBox(uint flags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 180, Column 29 in build/submodules/SDL/include\\SDL_messagebox.h")]
        [NativeApi(EntryPoint = "SDL_ShowSimpleMessageBox", Convention = CallingConvention.Winapi)]
        public partial int ShowSimpleMessageBox(uint flags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 39 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_CreateView", Convention = CallingConvention.Winapi)]
        public unsafe partial void* MetalCreateView(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 39 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_CreateView", Convention = CallingConvention.Winapi)]
        public unsafe partial void* MetalCreateView(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_DestroyView", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalDestroyView(void* view);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_DestroyView", Convention = CallingConvention.Winapi)]
        public partial void MetalDestroyView<T0>(ref T0 view) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 83, Column 31 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetLayer", Convention = CallingConvention.Winapi)]
        public unsafe partial void* MetalGetLayer(void* view);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 83, Column 31 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetLayer", Convention = CallingConvention.Winapi)]
        public unsafe partial void* MetalGetLayer<T0>(ref T0 view) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(Window* window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(Window* window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(Window* window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(Window* window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(ref Window window, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(ref Window window, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void MetalGetDrawableSize(ref Window window, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 106, Column 30 in build/submodules/SDL/include\\SDL_metal.h")]
        [NativeApi(EntryPoint = "SDL_Metal_GetDrawableSize", Convention = CallingConvention.Winapi)]
        public partial void MetalGetDrawableSize(ref Window window, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 40 in build/submodules/SDL/include\\SDL_power.h")]
        [NativeApi(EntryPoint = "SDL_GetPowerInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial PowerState GetPowerInfo(int* secs, int* pct);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 40 in build/submodules/SDL/include\\SDL_power.h")]
        [NativeApi(EntryPoint = "SDL_GetPowerInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial PowerState GetPowerInfo(int* secs, ref int pct);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 40 in build/submodules/SDL/include\\SDL_power.h")]
        [NativeApi(EntryPoint = "SDL_GetPowerInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial PowerState GetPowerInfo(ref int secs, int* pct);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 76, Column 40 in build/submodules/SDL/include\\SDL_power.h")]
        [NativeApi(EntryPoint = "SDL_GetPowerInfo", Convention = CallingConvention.Winapi)]
        public partial PowerState GetPowerInfo(ref int secs, ref int pct);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetNumRenderDrivers")]
        public partial int GetNumRenderDrivers();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 174, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDriverInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDriverInfo(int index, RendererInfo* info);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 174, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDriverInfo", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDriverInfo(int index, ref RendererInfo info);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 192, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindowAndRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial int CreateWindowAndRenderer(int width, int height, uint window_flags, Window** window, Renderer** renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 192, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindowAndRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial int CreateWindowAndRenderer(int width, int height, uint window_flags, Window** window, ref Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 192, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindowAndRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial int CreateWindowAndRenderer(int width, int height, uint window_flags, ref Window* window, Renderer** renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 192, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateWindowAndRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial int CreateWindowAndRenderer(int width, int height, uint window_flags, ref Window* window, ref Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 212, Column 40 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial Renderer* CreateRenderer(Window* window, int index, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 212, Column 40 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial Renderer* CreateRenderer(ref Window window, int index, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 232, Column 40 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateSoftwareRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial Renderer* CreateSoftwareRenderer(Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 232, Column 40 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateSoftwareRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial Renderer* CreateSoftwareRenderer(ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 243, Column 40 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial Renderer* GetRenderer(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 243, Column 40 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial Renderer* GetRenderer(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 256, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererInfo(Renderer* renderer, RendererInfo* info);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 256, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererInfo(Renderer* renderer, ref RendererInfo info);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 256, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererInfo(ref Renderer renderer, RendererInfo* info);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 256, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererInfo", Convention = CallingConvention.Winapi)]
        public partial int GetRendererInfo(ref Renderer renderer, ref RendererInfo info);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(Renderer* renderer, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(Renderer* renderer, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(Renderer* renderer, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(Renderer* renderer, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(ref Renderer renderer, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(ref Renderer renderer, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRendererOutputSize(ref Renderer renderer, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 276, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRendererOutputSize", Convention = CallingConvention.Winapi)]
        public partial int GetRendererOutputSize(ref Renderer renderer, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 299, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* CreateTexture(Renderer* renderer, uint format, int access, int w, int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 299, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* CreateTexture(ref Renderer renderer, uint format, int access, int w, int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 326, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateTextureFromSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* CreateTextureFromSurface(Renderer* renderer, Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 326, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateTextureFromSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* CreateTextureFromSurface(Renderer* renderer, ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 326, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateTextureFromSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* CreateTextureFromSurface(ref Renderer renderer, Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 326, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_CreateTextureFromSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* CreateTextureFromSurface(ref Renderer renderer, ref Surface surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, int* access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, int* access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, int* access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, int* access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, ref int access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, ref int access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, ref int access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, uint* format, ref int access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, int* access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, int* access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, int* access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, int* access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, ref int access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, ref int access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, ref int access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(Texture* texture, ref uint format, ref int access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, int* access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, int* access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, int* access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, int* access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, ref int access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, ref int access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, ref int access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, uint* format, ref int access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, int* access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, int* access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, int* access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, int* access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, ref int access, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, ref int access, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int QueryTexture(ref Texture texture, ref uint format, ref int access, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 344, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_QueryTexture", Convention = CallingConvention.Winapi)]
        public partial int QueryTexture(ref Texture texture, ref uint format, ref int access, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 370, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetTextureColorMod(Texture* texture, byte r, byte g, byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 370, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int SetTextureColorMod(ref Texture texture, byte r, byte g, byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, ref byte r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, ref byte r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, ref byte r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, ref byte r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 387, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureColorMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureColorMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 410, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetTextureAlphaMod(Texture* texture, byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 410, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public partial int SetTextureAlphaMod(ref Texture texture, byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 425, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureAlphaMod(Texture* texture, byte* alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 425, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureAlphaMod(Texture* texture, ref byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 425, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureAlphaMod(Texture* texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 425, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureAlphaMod(ref Texture texture, byte* alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 425, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureAlphaMod(ref Texture texture, ref byte alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 425, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureAlphaMod", Convention = CallingConvention.Winapi)]
        public partial int GetTextureAlphaMod(ref Texture texture, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string alpha);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 443, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetTextureBlendMode(Texture* texture, BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 443, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureBlendMode", Convention = CallingConvention.Winapi)]
        public partial int SetTextureBlendMode(ref Texture texture, BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 456, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureBlendMode(Texture* texture, BlendMode* blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 456, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureBlendMode(Texture* texture, ref BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 456, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureBlendMode(ref Texture texture, BlendMode* blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 456, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureBlendMode", Convention = CallingConvention.Winapi)]
        public partial int GetTextureBlendMode(ref Texture texture, ref BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 470, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureScaleMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetTextureScaleMode(Texture* texture, ScaleMode scaleMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 470, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetTextureScaleMode", Convention = CallingConvention.Winapi)]
        public partial int SetTextureScaleMode(ref Texture texture, ScaleMode scaleMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 482, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureScaleMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureScaleMode(Texture* texture, ScaleMode* scaleMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 482, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureScaleMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureScaleMode(Texture* texture, ref ScaleMode scaleMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 482, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureScaleMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetTextureScaleMode(ref Texture texture, ScaleMode* scaleMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 482, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetTextureScaleMode", Convention = CallingConvention.Winapi)]
        public partial int GetTextureScaleMode(ref Texture texture, ref ScaleMode scaleMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture<T0>(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture<T0>(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture<T0>(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 512, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateTexture<T0>(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, byte* Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, ref byte Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 543, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateYUVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateYUVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Uplane, int Upitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Vplane, int Vpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, byte* Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref byte Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, byte* UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, ref byte UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 565, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UpdateNVTexture", Convention = CallingConvention.Winapi)]
        public partial int UpdateNVTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string Yplane, int Ypitch, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string UVplane, int UVpitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, void** pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, void** pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref void* pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref void* pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, void** pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, void** pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref void* pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref void* pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, void** pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, void** pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref void* pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref void* pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, void** pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, void** pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref void* pixels, int* pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTexture(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref void* pixels, ref int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, Surface** surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(Texture* texture, Silk.NET.Maths.Rectangle<int>* rect, ref Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, Surface** surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(Texture* texture, ref Silk.NET.Maths.Rectangle<int> rect, ref Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, Surface** surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(ref Texture texture, Silk.NET.Maths.Rectangle<int>* rect, ref Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, Surface** surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 629, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_LockTextureToSurface", Convention = CallingConvention.Winapi)]
        public unsafe partial int LockTextureToSurface(ref Texture texture, ref Silk.NET.Maths.Rectangle<int> rect, ref Surface* surface);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 648, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UnlockTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial void UnlockTexture(Texture* texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 648, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_UnlockTexture", Convention = CallingConvention.Winapi)]
        public partial void UnlockTexture(ref Texture texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 660, Column 34 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderTargetSupported", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool RenderTargetSupported(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 660, Column 34 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderTargetSupported", Convention = CallingConvention.Winapi)]
        public partial SdlBool RenderTargetSupported(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 684, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderTarget", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetRenderTarget(Renderer* renderer, Texture* texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 684, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderTarget", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetRenderTarget(Renderer* renderer, ref Texture texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 684, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderTarget", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetRenderTarget(ref Renderer renderer, Texture* texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 684, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderTarget", Convention = CallingConvention.Winapi)]
        public partial int SetRenderTarget(ref Renderer renderer, ref Texture texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 700, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderTarget", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* GetRenderTarget(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 700, Column 39 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderTarget", Convention = CallingConvention.Winapi)]
        public unsafe partial Texture* GetRenderTarget(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetLogicalSize(Renderer* renderer, int w, int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetLogicalSize", Convention = CallingConvention.Winapi)]
        public partial int RenderSetLogicalSize(ref Renderer renderer, int w, int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(Renderer* renderer, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(Renderer* renderer, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(Renderer* renderer, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(Renderer* renderer, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(ref Renderer renderer, int* w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(ref Renderer renderer, int* w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetLogicalSize(ref Renderer renderer, ref int w, int* h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 744, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetLogicalSize", Convention = CallingConvention.Winapi)]
        public partial void RenderGetLogicalSize(ref Renderer renderer, ref int w, ref int h);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 763, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetIntegerScale", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetIntegerScale(Renderer* renderer, SdlBool enable);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 763, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetIntegerScale", Convention = CallingConvention.Winapi)]
        public partial int RenderSetIntegerScale(ref Renderer renderer, SdlBool enable);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 777, Column 34 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetIntegerScale", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool RenderGetIntegerScale(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 777, Column 34 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetIntegerScale", Convention = CallingConvention.Winapi)]
        public partial SdlBool RenderGetIntegerScale(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 793, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetViewport", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetViewport(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 793, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetViewport", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetViewport(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 793, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetViewport", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetViewport(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 793, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetViewport", Convention = CallingConvention.Winapi)]
        public partial int RenderSetViewport(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 804, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetViewport", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetViewport(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 804, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetViewport", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetViewport(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 804, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetViewport", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetViewport(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 804, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetViewport", Convention = CallingConvention.Winapi)]
        public partial void RenderGetViewport(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 820, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetClipRect(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 820, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetClipRect(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 820, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetClipRect(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 820, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetClipRect", Convention = CallingConvention.Winapi)]
        public partial int RenderSetClipRect(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetClipRect(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetClipRect(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetClipRect", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetClipRect(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetClipRect", Convention = CallingConvention.Winapi)]
        public partial void RenderGetClipRect(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 849, Column 34 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderIsClipEnabled", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool RenderIsClipEnabled(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 849, Column 34 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderIsClipEnabled", Convention = CallingConvention.Winapi)]
        public partial SdlBool RenderIsClipEnabled(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 874, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderSetScale(Renderer* renderer, float scaleX, float scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 874, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderSetScale", Convention = CallingConvention.Winapi)]
        public partial int RenderSetScale(ref Renderer renderer, float scaleX, float scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(Renderer* renderer, float* scaleX, float* scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(Renderer* renderer, float* scaleX, ref float scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(Renderer* renderer, ref float scaleX, float* scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(Renderer* renderer, ref float scaleX, ref float scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(ref Renderer renderer, float* scaleX, float* scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(ref Renderer renderer, float* scaleX, ref float scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderGetScale(ref Renderer renderer, ref float scaleX, float* scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 888, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetScale", Convention = CallingConvention.Winapi)]
        public partial void RenderGetScale(ref Renderer renderer, ref float scaleX, ref float scaleY);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 918, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetRenderDrawColor(Renderer* renderer, byte r, byte g, byte b, byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 918, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int SetRenderDrawColor(ref Renderer renderer, byte r, byte g, byte b, byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(Renderer* renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, byte* r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, ref byte r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, byte* g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, ref byte g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, byte* b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, ref byte b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, byte* a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, ref byte a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 939, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawColor", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawColor(ref Renderer renderer, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string r, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string g, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string b, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string a);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 963, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderDrawBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetRenderDrawBlendMode(Renderer* renderer, BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 963, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_SetRenderDrawBlendMode", Convention = CallingConvention.Winapi)]
        public partial int SetRenderDrawBlendMode(ref Renderer renderer, BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawBlendMode(Renderer* renderer, BlendMode* blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawBlendMode(Renderer* renderer, ref BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawBlendMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetRenderDrawBlendMode(ref Renderer renderer, BlendMode* blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GetRenderDrawBlendMode", Convention = CallingConvention.Winapi)]
        public partial int GetRenderDrawBlendMode(ref Renderer renderer, ref BlendMode blendMode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 993, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderClear", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderClear(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 993, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderClear", Convention = CallingConvention.Winapi)]
        public partial int RenderClear(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1018, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPoint", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPoint(Renderer* renderer, int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1018, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPoint", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawPoint(ref Renderer renderer, int x, int y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1042, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPoints", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPoints(Renderer* renderer, Point* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1042, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPoints", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPoints(Renderer* renderer, ref Point points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1042, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPoints", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPoints(ref Renderer renderer, Point* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1042, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPoints", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawPoints(ref Renderer renderer, ref Point points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1073, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLine", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLine(Renderer* renderer, int x1, int y1, int x2, int y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1073, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLine", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawLine(ref Renderer renderer, int x1, int y1, int x2, int y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1099, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLines", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLines(Renderer* renderer, Point* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1099, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLines", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLines(Renderer* renderer, ref Point points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1099, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLines", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLines(ref Renderer renderer, Point* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1099, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLines", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawLines(ref Renderer renderer, ref Point points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1123, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRect(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1123, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRect(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1123, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRect(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1123, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRect", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawRect(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRects(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRects(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRects(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1147, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRects", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawRects(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1175, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRect(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1175, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRect(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1175, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRect", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRect(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1175, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRect", Convention = CallingConvention.Winapi)]
        public partial int RenderFillRect(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1198, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRects(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1198, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRects(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1198, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRects", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRects(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1198, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRects", Convention = CallingConvention.Winapi)]
        public partial int RenderFillRects(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopy(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1228, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopy", Convention = CallingConvention.Winapi)]
        public partial int RenderCopy(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, Silk.NET.Maths.Rectangle<int>* dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, Point* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1270, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyEx", Convention = CallingConvention.Winapi)]
        public partial int RenderCopyEx(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref Silk.NET.Maths.Rectangle<int> dstrect, double angle, ref Point center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1287, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPointF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPointF(Renderer* renderer, float x, float y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1287, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPointF", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawPointF(ref Renderer renderer, float x, float y);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1298, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPointsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPointsF(Renderer* renderer, FPoint* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1298, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPointsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPointsF(Renderer* renderer, ref FPoint points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1298, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPointsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawPointsF(ref Renderer renderer, FPoint* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1298, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawPointsF", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawPointsF(ref Renderer renderer, ref FPoint points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1312, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLineF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLineF(Renderer* renderer, float x1, float y1, float x2, float y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1312, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLineF", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawLineF(ref Renderer renderer, float x1, float y1, float x2, float y2);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1324, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLinesF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLinesF(Renderer* renderer, FPoint* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1324, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLinesF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLinesF(Renderer* renderer, ref FPoint points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1324, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLinesF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawLinesF(ref Renderer renderer, FPoint* points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1324, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawLinesF", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawLinesF(ref Renderer renderer, ref FPoint points, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1335, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRectF(Renderer* renderer, FRect* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1335, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRectF(Renderer* renderer, ref FRect rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1335, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRectF(ref Renderer renderer, FRect* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1335, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectF", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawRectF(ref Renderer renderer, ref FRect rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1347, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRectsF(Renderer* renderer, FRect* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1347, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRectsF(Renderer* renderer, ref FRect rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1347, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderDrawRectsF(ref Renderer renderer, FRect* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1347, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderDrawRectsF", Convention = CallingConvention.Winapi)]
        public partial int RenderDrawRectsF(ref Renderer renderer, ref FRect rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1360, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRectF(Renderer* renderer, FRect* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1360, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRectF(Renderer* renderer, ref FRect rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1360, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRectF(ref Renderer renderer, FRect* rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1360, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectF", Convention = CallingConvention.Winapi)]
        public partial int RenderFillRectF(ref Renderer renderer, ref FRect rect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1372, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRectsF(Renderer* renderer, FRect* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1372, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRectsF(Renderer* renderer, ref FRect rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1372, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectsF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFillRectsF(ref Renderer renderer, FRect* rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1372, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFillRectsF", Convention = CallingConvention.Winapi)]
        public partial int RenderFillRectsF(ref Renderer renderer, ref FRect rects, int count);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyF(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1388, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyF", Convention = CallingConvention.Winapi)]
        public partial int RenderCopyF(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(Renderer* renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, Texture* texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, Silk.NET.Maths.Rectangle<int>* srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, FRect* dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, FPoint* center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1409, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderCopyExF", Convention = CallingConvention.Winapi)]
        public partial int RenderCopyExF(ref Renderer renderer, ref Texture texture, ref Silk.NET.Maths.Rectangle<int> srcrect, ref FRect dstrect, double angle, ref FPoint center, RendererFlip flip);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect, uint format, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels<T0>(Renderer* renderer, Silk.NET.Maths.Rectangle<int>* rect, uint format, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect, uint format, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels<T0>(Renderer* renderer, ref Silk.NET.Maths.Rectangle<int> rect, uint format, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect, uint format, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels<T0>(ref Renderer renderer, Silk.NET.Maths.Rectangle<int>* rect, uint format, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderReadPixels(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect, uint format, void* pixels, int pitch);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1440, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderReadPixels", Convention = CallingConvention.Winapi)]
        public partial int RenderReadPixels<T0>(ref Renderer renderer, ref Silk.NET.Maths.Rectangle<int> rect, uint format, ref T0 pixels, int pitch) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1479, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderPresent", Convention = CallingConvention.Winapi)]
        public unsafe partial void RenderPresent(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1479, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderPresent", Convention = CallingConvention.Winapi)]
        public partial void RenderPresent(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1492, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_DestroyTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial void DestroyTexture(Texture* texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1492, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_DestroyTexture", Convention = CallingConvention.Winapi)]
        public partial void DestroyTexture(ref Texture texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1501, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_DestroyRenderer", Convention = CallingConvention.Winapi)]
        public unsafe partial void DestroyRenderer(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1501, Column 30 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_DestroyRenderer", Convention = CallingConvention.Winapi)]
        public partial void DestroyRenderer(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1532, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFlush", Convention = CallingConvention.Winapi)]
        public unsafe partial int RenderFlush(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1532, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderFlush", Convention = CallingConvention.Winapi)]
        public partial int RenderFlush(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(Texture* texture, float* texw, float* texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(Texture* texture, float* texw, ref float texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(Texture* texture, ref float texw, float* texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(Texture* texture, ref float texw, ref float texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(ref Texture texture, float* texw, float* texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(ref Texture texture, float* texw, ref float texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLBindTexture(ref Texture texture, ref float texw, float* texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1570, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_BindTexture", Convention = CallingConvention.Winapi)]
        public partial int GLBindTexture(ref Texture texture, ref float texw, ref float texh);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1583, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_UnbindTexture", Convention = CallingConvention.Winapi)]
        public unsafe partial int GLUnbindTexture(Texture* texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1583, Column 29 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_GL_UnbindTexture", Convention = CallingConvention.Winapi)]
        public partial int GLUnbindTexture(ref Texture texture);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1597, Column 31 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetMetalLayer", Convention = CallingConvention.Winapi)]
        public unsafe partial void* RenderGetMetalLayer(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1597, Column 31 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetMetalLayer", Convention = CallingConvention.Winapi)]
        public unsafe partial void* RenderGetMetalLayer(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1611, Column 31 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetMetalCommandEncoder", Convention = CallingConvention.Winapi)]
        public unsafe partial void* RenderGetMetalCommandEncoder(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1611, Column 31 in build/submodules/SDL/include/SDL_render.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetMetalCommandEncoder", Convention = CallingConvention.Winapi)]
        public unsafe partial void* RenderGetMetalCommandEncoder(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 38 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_CreateShapedWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateShapedWindow(byte* title, uint x, uint y, uint w, uint h, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 38 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_CreateShapedWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateShapedWindow(ref byte title, uint x, uint y, uint w, uint h, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 66, Column 38 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_CreateShapedWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial Window* CreateShapedWindow([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string title, uint x, uint y, uint w, uint h, uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 77, Column 34 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_IsShapedWindow", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool IsShapedWindow(Window* window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 77, Column 34 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_IsShapedWindow", Convention = CallingConvention.Winapi)]
        public partial SdlBool IsShapedWindow(ref Window window);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(Window* window, Surface* shape, WindowShapeModeVal* shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(Window* window, Surface* shape, ref WindowShapeModeVal shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(Window* window, ref Surface shape, WindowShapeModeVal* shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(Window* window, ref Surface shape, ref WindowShapeModeVal shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(ref Window window, Surface* shape, WindowShapeModeVal* shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(ref Window window, Surface* shape, ref WindowShapeModeVal shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public unsafe partial int SetWindowShape(ref Window window, ref Surface shape, WindowShapeModeVal* shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 121, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_SetWindowShape", Convention = CallingConvention.Winapi)]
        public partial int SetWindowShape(ref Window window, ref Surface shape, ref WindowShapeModeVal shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 136, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_GetShapedWindowMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetShapedWindowMode(Window* window, WindowShapeModeVal* shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 136, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_GetShapedWindowMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetShapedWindowMode(Window* window, ref WindowShapeModeVal shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 136, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_GetShapedWindowMode", Convention = CallingConvention.Winapi)]
        public unsafe partial int GetShapedWindowMode(ref Window window, WindowShapeModeVal* shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 136, Column 29 in build/submodules/SDL/include\\SDL_shape.h")]
        [NativeApi(EntryPoint = "SDL_GetShapedWindowMode", Convention = CallingConvention.Winapi)]
        public partial int GetShapedWindowMode(ref Window window, ref WindowShapeModeVal shape_mode);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 54, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_SetWindowsMessageHook", Convention = CallingConvention.Winapi)]
        public unsafe partial void SetWindowsMessageHook(PfnWindowsMessageHook callback, void* userdata);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 54, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_SetWindowsMessageHook", Convention = CallingConvention.Winapi)]
        public partial void SetWindowsMessageHook<T0>(PfnWindowsMessageHook callback, ref T0 userdata) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 69, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_Direct3D9GetAdapterIndex", Convention = CallingConvention.Winapi)]
        public partial int Direct3D9GetAdapterIndex(int displayIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 85, Column 43 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RenderGetD3D9Device", Convention = CallingConvention.Winapi)]
        public unsafe partial IDirect3DDevice9* RenderGetD3D9Device(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 85, Column 43 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_RenderGetD3D9Device", Convention = CallingConvention.Winapi)]
        public unsafe partial IDirect3DDevice9* RenderGetD3D9Device(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 99, Column 39 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetD3D11Device", Convention = CallingConvention.Winapi)]
        public unsafe partial Silk.NET.Core.Native.IUnknown* RenderGetD3D11Device(Renderer* renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 99, Column 39 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_RenderGetD3D11Device", Convention = CallingConvention.Winapi)]
        public unsafe partial Silk.NET.Core.Native.IUnknown* RenderGetD3D11Device(ref Renderer renderer);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 119, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_DXGIGetOutputInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool DXGIGetOutputInfo(int displayIndex, int* adapterIndex, int* outputIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 119, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_DXGIGetOutputInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool DXGIGetOutputInfo(int displayIndex, int* adapterIndex, ref int outputIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 119, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_DXGIGetOutputInfo", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool DXGIGetOutputInfo(int displayIndex, ref int adapterIndex, int* outputIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 119, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_DXGIGetOutputInfo", Convention = CallingConvention.Winapi)]
        public partial SdlBool DXGIGetOutputInfo(int displayIndex, ref int adapterIndex, ref int outputIndex);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 144, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_iPhoneSetAnimationCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial int IPhoneSetAnimationCallback(Window* window, int interval, PfnFreeFunc callback, void* callbackParam);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 144, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_iPhoneSetAnimationCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial int IPhoneSetAnimationCallback<T0>(Window* window, int interval, PfnFreeFunc callback, ref T0 callbackParam) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 144, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_iPhoneSetAnimationCallback", Convention = CallingConvention.Winapi)]
        public unsafe partial int IPhoneSetAnimationCallback(ref Window window, int interval, PfnFreeFunc callback, void* callbackParam);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 144, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_iPhoneSetAnimationCallback", Convention = CallingConvention.Winapi)]
        public partial int IPhoneSetAnimationCallback<T0>(ref Window window, int interval, PfnFreeFunc callback, ref T0 callbackParam) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 147, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_iPhoneSetEventPump", Convention = CallingConvention.Winapi)]
        public partial void IPhoneSetEventPump(SdlBool enabled);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 172, Column 32 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetJNIEnv")]
        public unsafe partial void* AndroidGetJNIEnv();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 194, Column 32 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetActivity")]
        public unsafe partial void* AndroidGetActivity();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 223, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_GetAndroidSDKVersion")]
        public partial int GetAndroidSDKVersion();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 230, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_IsAndroidTV")]
        public partial SdlBool IsAndroidTV();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 237, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_IsChromebook")]
        public partial SdlBool IsChromebook();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 244, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_IsDeXMode")]
        public partial SdlBool IsDeXMode();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 249, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidBackButton")]
        public partial void AndroidBackButton();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 274, Column 38 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetInternalStoragePath")]
        public unsafe partial byte* AndroidGetInternalStoragePath();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 274, Column 38 in build/submodules/SDL/include\\SDL_system.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetInternalStoragePath", Convention = CallingConvention.Winapi)]
        public partial string AndroidGetInternalStoragePathS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 291, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetExternalStorageState")]
        public partial int AndroidGetExternalStorageState();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 309, Column 38 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetExternalStoragePath")]
        public unsafe partial byte* AndroidGetExternalStoragePath();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 309, Column 38 in build/submodules/SDL/include\\SDL_system.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidGetExternalStoragePath", Convention = CallingConvention.Winapi)]
        public partial string AndroidGetExternalStoragePathS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 320, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidRequestPermission", Convention = CallingConvention.Winapi)]
        public unsafe partial SdlBool AndroidRequestPermission(byte* permission);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 320, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidRequestPermission", Convention = CallingConvention.Winapi)]
        public partial SdlBool AndroidRequestPermission(ref byte permission);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 320, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidRequestPermission", Convention = CallingConvention.Winapi)]
        public partial SdlBool AndroidRequestPermission([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string permission);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 343, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidShowToast", Convention = CallingConvention.Winapi)]
        public unsafe partial int AndroidShowToast(byte* message, int duration, int gravity, int xoffset, int yoffset);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 343, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidShowToast", Convention = CallingConvention.Winapi)]
        public partial int AndroidShowToast(ref byte message, int duration, int gravity, int xoffset, int yoffset);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 343, Column 29 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_AndroidShowToast", Convention = CallingConvention.Winapi)]
        public partial int AndroidShowToast([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string message, int duration, int gravity, int xoffset, int yoffset);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 414, Column 41 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTGetFSPathUNICODE", Convention = CallingConvention.Winapi)]
        public unsafe partial char* WinRTGetFSPathUNICODE(WinRTPath pathType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 414, Column 41 in build/submodules/SDL/include\\SDL_system.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTGetFSPathUNICODE", Convention = CallingConvention.Winapi)]
        public partial string WinRTGetFSPathUNICODES(WinRTPath pathType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 437, Column 38 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTGetFSPathUTF8", Convention = CallingConvention.Winapi)]
        public unsafe partial byte* WinRTGetFSPathUTF8(WinRTPath pathType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 437, Column 38 in build/submodules/SDL/include\\SDL_system.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTGetFSPathUTF8", Convention = CallingConvention.Winapi)]
        public partial string WinRTGetFSPathUTF8S(WinRTPath pathType);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 444, Column 48 in build/submodules/SDL/include\\SDL_system.h")]
        [ExcludeFromOverride(0)]
        [NativeApi(EntryPoint = "SDL_WinRTGetDeviceFamily")]
        public partial WinRTDeviceFamily WinRTGetDeviceFamily();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 455, Column 34 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_IsTablet")]
        public partial SdlBool IsTablet();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 458, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationWillTerminate")]
        public partial void OnApplicationWillTerminate();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 459, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationDidReceiveMemoryWarning")]
        public partial void OnApplicationDidReceiveMemoryWarning();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 460, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationWillResignActive")]
        public partial void OnApplicationWillResignActive();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 461, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationDidEnterBackground")]
        public partial void OnApplicationDidEnterBackground();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 462, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationWillEnterForeground")]
        public partial void OnApplicationWillEnterForeground();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 463, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationDidBecomeActive")]
        public partial void OnApplicationDidBecomeActive();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 465, Column 30 in build/submodules/SDL/include\\SDL_system.h")]
        [NativeApi(EntryPoint = "SDL_OnApplicationDidChangeStatusBarOrientation")]
        public partial void OnApplicationDidChangeStatusBarOrientation();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 50, Column 32 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_GetTicks")]
        public partial uint GetTicks();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 32 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_GetPerformanceCounter")]
        public partial ulong GetPerformanceCounter();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 90, Column 32 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_GetPerformanceFrequency")]
        public partial ulong GetPerformanceFrequency();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 101, Column 30 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_Delay", Convention = CallingConvention.Winapi)]
        public partial void Delay(uint ms);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 148, Column 37 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_AddTimer", Convention = CallingConvention.Winapi)]
        public unsafe partial int AddTimer(uint interval, PfnTimerCallback callback, void* param);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 148, Column 37 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_AddTimer", Convention = CallingConvention.Winapi)]
        public partial int AddTimer<T0>(uint interval, PfnTimerCallback callback, ref T0 param) where T0 : unmanaged;

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 161, Column 34 in build/submodules/SDL/include\\SDL_timer.h")]
        [NativeApi(EntryPoint = "SDL_RemoveTimer", Convention = CallingConvention.Winapi)]
        public partial SdlBool RemoveTimer(int id);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 123, Column 30 in build/submodules/SDL/include\\SDL_version.h")]
        [NativeApi(EntryPoint = "SDL_GetVersion", Convention = CallingConvention.Winapi)]
        public unsafe partial void GetVersion(Version* ver);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 123, Column 30 in build/submodules/SDL/include\\SDL_version.h")]
        [NativeApi(EntryPoint = "SDL_GetVersion", Convention = CallingConvention.Winapi)]
        public partial void GetVersion(ref Version ver);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 150, Column 37 in build/submodules/SDL/include\\SDL_version.h")]
        [NativeApi(EntryPoint = "SDL_GetRevision")]
        public unsafe partial byte* GetRevision();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 150, Column 37 in build/submodules/SDL/include\\SDL_version.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        [NativeApi(EntryPoint = "SDL_GetRevision", Convention = CallingConvention.Winapi)]
        public partial string GetRevisionS();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 161, Column 44 in build/submodules/SDL/include\\SDL_version.h")]
        [NativeApi(EntryPoint = "SDL_GetRevisionNumber")]
        public partial int GetRevisionNumber();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 89, Column 38 in build/submodules/SDL/include\\SDL_locale.h")]
        [NativeApi(EntryPoint = "SDL_GetPreferredLocales")]
        public unsafe partial Locale* GetPreferredLocales();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 69, Column 29 in build/submodules/SDL/include\\SDL_misc.h")]
        [NativeApi(EntryPoint = "SDL_OpenURL", Convention = CallingConvention.Winapi)]
        public unsafe partial int OpenURL(byte* url);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 69, Column 29 in build/submodules/SDL/include\\SDL_misc.h")]
        [NativeApi(EntryPoint = "SDL_OpenURL", Convention = CallingConvention.Winapi)]
        public partial int OpenURL(ref byte url);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 69, Column 29 in build/submodules/SDL/include\\SDL_misc.h")]
        [NativeApi(EntryPoint = "SDL_OpenURL", Convention = CallingConvention.Winapi)]
        public partial int OpenURL([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string url);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 140, Column 29 in SDL.h")]
        [NativeApi(EntryPoint = "SDL_Init", Convention = CallingConvention.Winapi)]
        public partial int Init(uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 155, Column 29 in SDL.h")]
        [NativeApi(EntryPoint = "SDL_InitSubSystem", Convention = CallingConvention.Winapi)]
        public partial int InitSubSystem(uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 175, Column 30 in SDL.h")]
        [NativeApi(EntryPoint = "SDL_QuitSubSystem", Convention = CallingConvention.Winapi)]
        public partial void QuitSubSystem(uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 190, Column 32 in SDL.h")]
        [NativeApi(EntryPoint = "SDL_WasInit", Convention = CallingConvention.Winapi)]
        public partial uint WasInit(uint flags);

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 212, Column 30 in SDL.h")]
        [NativeApi(EntryPoint = "SDL_Quit")]
        public partial void Quit();

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr(byte* s1, byte* s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS(byte* s1, byte* s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr(byte* s1, ref byte s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(s1, ref s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS(byte* s1, ref byte s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(s1, ref s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr(byte* s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS(byte* s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr(ref byte s1, byte* s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(ref s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS(ref byte s1, byte* s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(ref s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr(ref byte s1, ref byte s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(ref s1, ref s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS(ref byte s1, ref byte s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(ref s1, ref s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr(ref byte s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(ref s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS(ref byte s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(ref s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, byte* s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, byte* s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, ref byte s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(s1, ref s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, ref byte s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(s1, ref s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe byte* Strtokr([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = Strtokr(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 524, Column 31 in build/submodules/SDL/include/SDL_stdinc.h")]
        [return: UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)]
        public unsafe string StrtokrS([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string s2, string[] saveptrSa)
        {
            // StringArrayOverloader
            var saveptr = (byte**) SilkMarshal.StringArrayToPtr(saveptrSa);
            var ret = StrtokrS(s1, s2, saveptr);
            SilkMarshal.CopyPtrToStringArray((nint) saveptr, saveptrSa);
            SilkMarshal.Free((nint) saveptr);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe int Strtol(byte* str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtol(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe int Strtol(ref byte str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtol(ref str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 536, Column 30 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe int Strtol([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtol(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe uint Strtoul(byte* str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoul(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe uint Strtoul(ref byte str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoul(ref str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 537, Column 39 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe uint Strtoul([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoul(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe long Strtoll(byte* str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoll(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe long Strtoll(ref byte str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoll(ref str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 538, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe long Strtoll([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoll(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe ulong Strtoull(byte* str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoull(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe ulong Strtoull(ref byte str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoull(ref str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 539, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe ulong Strtoull([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, string[] endpSa, int @base)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtoull(str, endp, @base);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe double Strtod(byte* str, string[] endpSa)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtod(str, endp);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe double Strtod(ref byte str, string[] endpSa)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtod(ref str, endp);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 540, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe double Strtod([UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string str, string[] endpSa)
        {
            // StringArrayOverloader
            var endp = (byte**) SilkMarshal.StringArrayToPtr(endpSa);
            var ret = Strtod(str, endp);
            SilkMarshal.CopyPtrToStringArray((nint) endp, endpSa);
            SilkMarshal.Free((nint) endp);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, nuint* inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, inbuf, inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, nuint* inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, inbuf, inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, nuint* inbytesleft, ref byte* outbuf, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(cd, inbuf, inbytesleft, ref outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, nuint* inbytesleft, ref byte* outbuf, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(cd, inbuf, inbytesleft, ref outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, ref nuint inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, inbuf, ref inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, ref nuint inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, inbuf, ref inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, ref nuint inbytesleft, ref byte* outbuf, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(cd, inbuf, ref inbytesleft, ref outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, string[] inbufSa, ref nuint inbytesleft, ref byte* outbuf, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(cd, inbuf, ref inbytesleft, ref outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, ref byte* inbuf, nuint* inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, ref inbuf, inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, ref byte* inbuf, nuint* inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, ref inbuf, inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, ref byte* inbuf, ref nuint inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, ref inbuf, ref inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(Icon* cd, ref byte* inbuf, ref nuint inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(cd, ref inbuf, ref inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, nuint* inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, inbuf, inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, nuint* inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, inbuf, inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, nuint* inbytesleft, ref byte* outbuf, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(ref cd, inbuf, inbytesleft, ref outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, nuint* inbytesleft, ref byte* outbuf, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(ref cd, inbuf, inbytesleft, ref outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, ref nuint inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, inbuf, ref inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, ref nuint inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, inbuf, ref inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, ref nuint inbytesleft, ref byte* outbuf, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(ref cd, inbuf, ref inbytesleft, ref outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, string[] inbufSa, ref nuint inbytesleft, ref byte* outbuf, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var inbuf = (byte**) SilkMarshal.StringArrayToPtr(inbufSa);
            var ret = Iconv(ref cd, inbuf, ref inbytesleft, ref outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) inbuf, inbufSa);
            SilkMarshal.Free((nint) inbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, ref byte* inbuf, nuint* inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, ref inbuf, inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, ref byte* inbuf, nuint* inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, ref inbuf, inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, ref byte* inbuf, ref nuint inbytesleft, string[] outbufSa, nuint* outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, ref inbuf, ref inbytesleft, outbuf, outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 32 in build/submodules/SDL/include/SDL_stdinc.h")]
        public unsafe nuint Iconv(ref Icon cd, ref byte* inbuf, ref nuint inbytesleft, string[] outbufSa, ref nuint outbytesleft)
        {
            // StringArrayOverloader
            var outbuf = (byte**) SilkMarshal.StringArrayToPtr(outbufSa);
            var ret = Iconv(ref cd, ref inbuf, ref inbytesleft, outbuf, ref outbytesleft);
            SilkMarshal.CopyPtrToStringArray((nint) outbuf, outbufSa);
            SilkMarshal.Free((nint) outbuf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        public unsafe SdlBool VulkanGetInstanceExtensions(Window* window, uint* pCount, string[] pNamesSa)
        {
            // StringArrayOverloader
            var pNames = (byte**) SilkMarshal.StringArrayToPtr(pNamesSa);
            var ret = VulkanGetInstanceExtensions(window, pCount, pNames);
            SilkMarshal.CopyPtrToStringArray((nint) pNames, pNamesSa);
            SilkMarshal.Free((nint) pNames);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        public unsafe SdlBool VulkanGetInstanceExtensions(Window* window, ref uint pCount, string[] pNamesSa)
        {
            // StringArrayOverloader
            var pNames = (byte**) SilkMarshal.StringArrayToPtr(pNamesSa);
            var ret = VulkanGetInstanceExtensions(window, ref pCount, pNames);
            SilkMarshal.CopyPtrToStringArray((nint) pNames, pNamesSa);
            SilkMarshal.Free((nint) pNames);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        public unsafe SdlBool VulkanGetInstanceExtensions(ref Window window, uint* pCount, string[] pNamesSa)
        {
            // StringArrayOverloader
            var pNames = (byte**) SilkMarshal.StringArrayToPtr(pNamesSa);
            var ret = VulkanGetInstanceExtensions(ref window, pCount, pNames);
            SilkMarshal.CopyPtrToStringArray((nint) pNames, pNamesSa);
            SilkMarshal.Free((nint) pNames);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 34 in SDL_vulkan.h")]
        public unsafe SdlBool VulkanGetInstanceExtensions(ref Window window, ref uint pCount, string[] pNamesSa)
        {
            // StringArrayOverloader
            var pNames = (byte**) SilkMarshal.StringArrayToPtr(pNamesSa);
            var ret = VulkanGetInstanceExtensions(ref window, ref pCount, pNames);
            SilkMarshal.CopyPtrToStringArray((nint) pNames, pNamesSa);
            SilkMarshal.Free((nint) pNames);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 173, Column 29 in build/submodules/SDL/include\\SDL_main.h")]
        public unsafe int UIKitRunApp(int argc, string[] argvSa, PfnMainFunc mainFunction)
        {
            // StringArrayOverloader
            var argv = (byte**) SilkMarshal.StringArrayToPtr(argvSa);
            var ret = UIKitRunApp(argc, argv, mainFunction);
            SilkMarshal.CopyPtrToStringArray((nint) argv, argvSa);
            SilkMarshal.Free((nint) argv);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(RWops* src, int freesrc, AudioSpec* spec, string[] audio_bufSa, uint* audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(src, freesrc, spec, audio_buf, audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(RWops* src, int freesrc, AudioSpec* spec, string[] audio_bufSa, ref uint audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(src, freesrc, spec, audio_buf, ref audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(RWops* src, int freesrc, ref AudioSpec spec, string[] audio_bufSa, uint* audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(src, freesrc, ref spec, audio_buf, audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(RWops* src, int freesrc, ref AudioSpec spec, string[] audio_bufSa, ref uint audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(src, freesrc, ref spec, audio_buf, ref audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(ref RWops src, int freesrc, AudioSpec* spec, string[] audio_bufSa, uint* audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(ref src, freesrc, spec, audio_buf, audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(ref RWops src, int freesrc, AudioSpec* spec, string[] audio_bufSa, ref uint audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(ref src, freesrc, spec, audio_buf, ref audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(ref RWops src, int freesrc, ref AudioSpec spec, string[] audio_bufSa, uint* audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(ref src, freesrc, ref spec, audio_buf, audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 670, Column 40 in build/submodules/SDL/include\\SDL_audio.h")]
        public unsafe AudioSpec* LoadWAVRW(ref RWops src, int freesrc, ref AudioSpec spec, string[] audio_bufSa, ref uint audio_len)
        {
            // StringArrayOverloader
            var audio_buf = (byte**) SilkMarshal.StringArrayToPtr(audio_bufSa);
            var ret = LoadWAVRW(ref src, freesrc, ref spec, audio_buf, ref audio_len);
            SilkMarshal.CopyPtrToStringArray((nint) audio_buf, audio_bufSa);
            SilkMarshal.Free((nint) audio_buf);
            return ret;
        }


        public Sdl(INativeContext ctx)
            : base(ctx)
        {
        }
    }
}

