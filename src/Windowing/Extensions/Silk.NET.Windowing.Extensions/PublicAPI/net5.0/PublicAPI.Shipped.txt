#nullable enable
Silk.NET.Windowing.Extensions.WindowManager
Silk.NET.Windowing.Extensions.WindowManager.CloseAll() -> void
Silk.NET.Windowing.Extensions.WindowManager.Dispose() -> void
Silk.NET.Windowing.Extensions.WindowManager.IsRunning.get -> bool
Silk.NET.Windowing.Extensions.WindowManager.IsRunning.set -> void
Silk.NET.Windowing.Extensions.WindowManager.Restart() -> void
Silk.NET.Windowing.Extensions.WindowManager.Run(bool open = true) -> void
Silk.NET.Windowing.Extensions.WindowManager.Stop() -> void
Silk.NET.Windowing.Extensions.WindowManager.WindowManager() -> void
~Silk.NET.Windowing.Extensions.WindowManager.AddWindow(Silk.NET.Windowing.IWindow window) -> void
~Silk.NET.Windowing.Extensions.WindowManager.CreateWindow(Silk.NET.Windowing.WindowOptions opts, Silk.NET.Windowing.IWindowHost host = null) -> void
~Silk.NET.Windowing.Extensions.WindowManager.GetCurrent() -> Silk.NET.Windowing.IWindow
~Silk.NET.Windowing.Extensions.WindowManager.RemoveWindow(Silk.NET.Windowing.IWindow window) -> bool
~Silk.NET.Windowing.Extensions.WindowManager.Windows.get -> System.Collections.Generic.ICollection<Silk.NET.Windowing.IWindow>
